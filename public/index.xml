<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A Sysadmin, An SRE, and a DevOps Walk Into a Bar</title>
    <link>https://stevenmurawski.com/</link>
    <description>Recent content on A Sysadmin, An SRE, and a DevOps Walk Into a Bar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://stevenmurawski.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dealing with Carriage Return Detected with Chef and VSCode</title>
      <link>https://stevenmurawski.com/2017/11/17/carriage-return-detected/</link>
      <pubDate>Fri, 17 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/11/17/carriage-return-detected/</guid>
      <description>Rubocop, starting around 48.1 changed its behavior with how line endings are expected on Windows.
I&amp;rsquo;ve been in favor of defaulting to Linux line endings since Windows doesn&amp;rsquo;t care and Linux (and a number of OSS tools) tend to break pretty hard with CRLF.
I&amp;rsquo;ve previously blogged my Git and VSCode settings to help with that.
If you are seeing an error from Rubocop in VSCode in your ruby files with LF line endings, you can add a setting to the rubocop.</description>
    </item>
    
    <item>
      <title>How to Build a Rust App in VSTS</title>
      <link>https://stevenmurawski.com/2017/10/19/how-to-build-rust-with-vsts/</link>
      <pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/10/19/how-to-build-rust-with-vsts/</guid>
      <description>Thanks to a bit of prompting on Twitter, I&amp;rsquo;ve whipped up a very basic &amp;ldquo;Hello World&amp;rdquo; Rust example with a Windows (MSVC) and Linux build.
Before We Start Requirements: Mandatory:  A Microsoft account (like a Hotmail, Live, or Outlook.com account) OR an Azure AD account A VSTS account (How to create a VSTS account)  Optional:  A GitHub account  Setting up your Workstation for Working with Rust If you don&amp;rsquo;t have a Rust development environment already, check out my post on setting up a Windows development environment for Rust.</description>
    </item>
    
    <item>
      <title>Running Mocha Tests</title>
      <link>https://stevenmurawski.com/2017/08/07/running-mocha-tests/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/08/07/running-mocha-tests/</guid>
      <description>I&amp;rsquo;m working on a project that has npm test wired up to use instanbul to run tests and generate code coverage reports. This is great for CI, but not for local development.</description>
    </item>
    
    <item>
      <title>Setting Up For Failure</title>
      <link>https://stevenmurawski.com/2017/07/18/setting-up-for-failure/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/07/18/setting-up-for-failure/</guid>
      <description>I&amp;rsquo;ve recently started training in Brazilian Jiu Jitsu (at Open Guard Gym in Oconomowoc, WI). To set the stage (for those of you who haven&amp;rsquo;t met me or seen me recently), I&amp;rsquo;m looking at age 40 in the rearview mirror and I am not in great shape (unless round is a great shape).
Over the past month, I&amp;rsquo;ve noticed I keep bringing up my age and state of fitness at the gym.</description>
    </item>
    
    <item>
      <title>Where Are Those Tools?</title>
      <link>https://stevenmurawski.com/2017/07/10/where-are-those-tools/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/07/10/where-are-those-tools/</guid>
      <description>I was looking to try out yo team to look at some possible extensions. I found that node and npm were already installed on my machine (though I didn&amp;rsquo;t remember installing it - the chocolaty package was there.).
After googling around a bit, I found
npm install --global yo  But, I still couldn&amp;rsquo;t launch yo.
C:\Users\stmuraws&amp;gt;yo &#39;yo&#39; is not recognized as an internal or external command, operable program or batch file.</description>
    </item>
    
    <item>
      <title>Pruning Branches From Your Source Tree</title>
      <link>https://stevenmurawski.com/2017/06/30/pruning-the-source-tree/</link>
      <pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/06/30/pruning-the-source-tree/</guid>
      <description>Shannon Dunn reached out with a question about moving to VSTS with Git repositories.
The Scenario Two groups of developers are working on one code base. One group is an internal dev team and the other is a contract dev group.
Shannon acknowledges that this is really more of a process challenge than a technical one.
 Over my many years I always find its the &amp;ldquo;right path&amp;rdquo; through tech that is the harder thing to know&amp;hellip;not the tech itself.</description>
    </item>
    
    <item>
      <title>Confessions of a Cloud Denier</title>
      <link>https://stevenmurawski.com/2017/06/06/confessions-of-a-cloud-denier/</link>
      <pubDate>Tue, 06 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/06/06/confessions-of-a-cloud-denier/</guid>
      <description>I&amp;rsquo;ve been pretty cloud agnostic (as in not believing in cloud, not necessarily any particular provider) to cloud hostile over the past few years. I&amp;rsquo;ve been supportive of cloud efforts of friends and co-workers, but I saw it as glorified virtualization with less control and worse performance than local workloads.
My last few jobs before Chef were very dependent on local machine performance and data gravity (keeping the apps close to the data).</description>
    </item>
    
    <item>
      <title>Blue Skies Ahead</title>
      <link>https://stevenmurawski.com/2017/06/05/blue-skies-ahead/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/06/05/blue-skies-ahead/</guid>
      <description>Last week I&amp;rsquo;ve announced that my last day at Chef was approaching (in 10 more days). I can&amp;rsquo;t begin to say enough good things about my experiences at Chef. I&amp;rsquo;ve been very blessed with my last series of jobs, from Edgenet to Stack Overflow to Chef. Each role has enabled me to grow and share my learnings.
Today, I can share with you what my next role will be.</description>
    </item>
    
    <item>
      <title>Slow is Smooth. Smooth is Fast</title>
      <link>https://stevenmurawski.com/2017/06/03/slow-is-fast/</link>
      <pubDate>Sat, 03 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/06/03/slow-is-fast/</guid>
      <description>The 2017 PowerShell/DevOps Summit in April was a great event. I spent a lot of time talking to folks about different workflows and how to approach building out their pipelines to deliver their configuration management.
One of the central oppositional themes I heard was, &amp;ldquo;We don&amp;rsquo;t need to deploy 15 times a day, so why go through the extra effort?&amp;rdquo;
Re-Thinking How We Deliver Change Regardless of how often you deploy software (and into what number of environments), you very likely don&amp;rsquo;t change your environment on the schedule you think you do.</description>
    </item>
    
    <item>
      <title>Quick Tip: Restart all the VMs via the Azure Cloud Shell</title>
      <link>https://stevenmurawski.com/2017/06/02/quick-tip-restart-vms-azure-cloud-shell/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/06/02/quick-tip-restart-vms-azure-cloud-shell/</guid>
      <description>The Azure Cloud Shell is a handy new addition to the Azure Portal.
Currently, you have access to a bash shell with the Azure CLI tooling (and some other stuff), and a PowerShell option is in limited preview.
I&amp;rsquo;ve needed this a couple of times (with some infrastructure testing) and using the Cloud Shell, I could restart all the VMs in my subscription with
az vm restart --ids $(az vm list --query &amp;quot;[].</description>
    </item>
    
    <item>
      <title>Thank You Chef</title>
      <link>https://stevenmurawski.com/2017/05/31/thank-you-chef/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/05/31/thank-you-chef/</guid>
      <description>Roughly three years ago, I made a decision that working with configuration management and sharing that message in a broader capacity was the direction I wanted to take my career. Several people I knew at Chef were excited about what was happening on Windows and encouraged me to talk to Nathen Harvey (thanks Mandi Walls, Julian Dunn, and Sean OMeara for those early encouraging words and to Mandi for setting up a call with Nathen!</description>
    </item>
    
    <item>
      <title>Getting Local: Working on Community Projects With Test-Kitchen</title>
      <link>https://stevenmurawski.com/2017/05/25/local-kitchen/</link>
      <pubDate>Thu, 25 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/05/25/local-kitchen/</guid>
      <description>Test-Kitchen is a great project for testing infrastructure changes. (We think so much of it at Chef that we include it in the ChefDK!)
The .kitchen.yml Test-Kitchen is mostly driven by a configuration file (the .kitchen.yml) which will define all the elements that the test harness will use to create a system to test, how to communicate to that system, what configuration to apply, and how to test that configuration.</description>
    </item>
    
    <item>
      <title>Experimenting with Time Tracking</title>
      <link>https://stevenmurawski.com/2017/04/03/tracking-my-time/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/04/03/tracking-my-time/</guid>
      <description>The other week, I started to experiment with a couple of time tracking tools.
RescueTime I&amp;rsquo;ve used earlier versions of RecueTime but it never really stuck. I decided to give it another try and went all in and paid for a year (there is a free tier, but I wanted to give it a long enough run to really build some history and patterns). It seems to be much more streamlined than when I first tried it.</description>
    </item>
    
    <item>
      <title>My Git and VS Code Settings</title>
      <link>https://stevenmurawski.com/2017/02/14/vscode-settings/</link>
      <pubDate>Tue, 14 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/02/14/vscode-settings/</guid>
      <description>I work regularly with several different project types and languages across Windows, Mac, and Linux.
I find some basic settings for Git and VS Code smooth out some headaches.
For VS Code, I have (at a minimum) several base plugins:
 C# Chef Extension for Visual Studio Code Git Blame Git History (git log) PowerShell Rust Ruby XML Tools  And my user settings include:
&amp;quot;files.eol&amp;quot;: &amp;quot;\n&amp;quot;, // Windows usually doesn&#39;t care, but Linux/Mac tooling is way more sensitive &amp;quot;editor.</description>
    </item>
    
    <item>
      <title>Late Start to 2017</title>
      <link>https://stevenmurawski.com/2017/01/30/late-start-2017/</link>
      <pubDate>Mon, 30 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2017/01/30/late-start-2017/</guid>
      <description>Starting off quickly! My 2017 started off pretty well, with re-award of my Microsoft MVP status in Cloud and Datacenter Management.
That was followed up by a week in Seattle with a few hundred of my fellow Chef employees for our year kick off meeting.
More Habitat and Rust I&amp;rsquo;ve been working mostly on our Habitat project since mid-August. Habitat is mostly written in Rust and has been a great experience.</description>
    </item>
    
    <item>
      <title>Setting Up A Windows Workstation for Chef Development - The Easy Way</title>
      <link>https://stevenmurawski.com/2016/08/22/simplified-chef-workstation/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/08/22/simplified-chef-workstation/</guid>
      <description>The Old Way I&amp;rsquo;ve got a longer post about building a cookbook to set up for Chef development. This felt kludgy and hard to maintain, so I played around a little bit.
The New Way Now, I&amp;rsquo;ve got a couple of snippets that get me pretty well on my way.
First (from PowerShell), some basic ExecutionPolicy configuration. Then install the latest ChefDK and Chocolatey. After that, apply a basic Chef recipe to install Git, ConEmu, Visual Studio Code, 7Zip, WinMerge, and Vagrant.</description>
    </item>
    
    <item>
      <title>Rustify</title>
      <link>https://stevenmurawski.com/2016/08/09/rustify/</link>
      <pubDate>Tue, 09 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/08/09/rustify/</guid>
      <description>Setting Up A Windows Workstation for Rust Development Getting Rust Let&amp;rsquo;s start with installing Rust itself.
Installing the standard way The rust-lang.org site has the current installers which you can download and install.
Installing the rustup way My preferred method is using rustup.rs.
invoke-restmethod -usebasicparsing &#39;https://static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe&#39; -outfile &#39;rustup-init.exe&#39; rustup-init.exe  That will pick the correct stable build (and allow you to customize) based on your system architecture. Read more about rustup.</description>
    </item>
    
    <item>
      <title>The Shipping Mindset</title>
      <link>https://stevenmurawski.com/2016/06/10/the-shipping-mindset/</link>
      <pubDate>Fri, 10 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/06/10/the-shipping-mindset/</guid>
      <description>TL;DR In traditional sysadmin work, we tend to find that whatever is implemented sticks around for a long time. This can lead to stressing about exactly how to implement a particular thing.
What I&amp;rsquo;ve learned working at Chef is if you focus on shipping and iterating, you can start with a less than optimal solution (but one that gets the job done), and as long as you are committed to shipping changing it iteratively becomes trivial.</description>
    </item>
    
    <item>
      <title>Getting Started With Test-Kitchen and DSC</title>
      <link>https://stevenmurawski.com/2016/05/15/getting-started-with-test-kitchen-and-dsc/</link>
      <pubDate>Sun, 15 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/05/15/getting-started-with-test-kitchen-and-dsc/</guid>
      <description>The Short Version  Install ChefDK From a new PowerShell window  chef gem install kitchen-dsc kitchen-pester kitchen-hyperv
 Change your directory to one with either a DSC configuration script or a PowerShell module with DSC resources. Put a .kitchen.yml document in your working directory (like this example) Type  kitchen list
NOTE: The .kitchen.yml example expects that you&amp;rsquo;ll be using a local Hyper-V instance and that you have a base virtual machine image to work from.</description>
    </item>
    
    <item>
      <title>Upgrade or Uproot</title>
      <link>https://stevenmurawski.com/2016/04/27/upgrade-or-uproot/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/04/27/upgrade-or-uproot/</guid>
      <description>/me braces for the onslaught of excuses
TL;DR If your business has
 to care about operating system end-of-life announcements, IT has failed. (unless you are an OS vendor or tools company) audit/compliance exposure due to old operating systems, IT has failed.  If, as a business (again, unless you are in the business around operating systems or tools), what operating system you run is a point of contention, IT has abdicated its responsiblity.</description>
    </item>
    
    <item>
      <title>DevOps and Agile</title>
      <link>https://stevenmurawski.com/2016/04/15/devops-and-agile/</link>
      <pubDate>Fri, 15 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/04/15/devops-and-agile/</guid>
      <description>Agile Vs. DevOps Agile and DevOps espouse some common ideas and ideals, which sometimes leads to comments like, &amp;ldquo;Why do we need to talk about this DevOps thing? Aren&amp;rsquo;t we already Agile?&amp;rdquo;
Some of this is answered by the size of your organization and the level of specialization of roles.
What is Agile? Agile (per the Agile Manifesto) purports to improve software development by favoring:
 Individuals and interactions over processes and tools</description>
    </item>
    
    <item>
      <title>Chef and DSC - The Webinar</title>
      <link>https://stevenmurawski.com/2016/04/14/chef-and-dsc-webinar/</link>
      <pubDate>Thu, 14 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/04/14/chef-and-dsc-webinar/</guid>
      <description>Earlier today, I did a webinar on Chef and DSC, which was pretty well attended. In about a week, we&amp;rsquo;ll have a follow up post on the Chef blog with answers to the questions I did not get to.
A big thank you to everyone who showed up - you have showed that there is great interest in using Chef and DSC together!</description>
    </item>
    
    <item>
      <title>The Steve and Jason Show at #pshsummit</title>
      <link>https://stevenmurawski.com/2016/04/04/the-steve-and-jason-show/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/04/04/the-steve-and-jason-show/</guid>
      <description>OMG I had so much fun yesterday. Aramis Captain Morgan Jason Helmick and I taught a DSC crash course to a pretty packed room for the PowerShell and DevOps Global Summit 2016 Pre-Con. It was a blast. Jason is AWESOME and brings a boatload of personal experience to the party. Between us, we had a pretty good view of what was working and what wasn&amp;rsquo;t in the DSC ecosystem.</description>
    </item>
    
    <item>
      <title>PowerShell and Chef - Good For Your Career</title>
      <link>https://stevenmurawski.com/2016/04/01/powershell-and-chef-are-good/</link>
      <pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/04/01/powershell-and-chef-are-good/</guid>
      <description>I&amp;rsquo;m feeling a bit nostalgic. I had a great (but busy) week at work - from customers who are succeeding with Windows / Chef / PowerShell and DSC, to community members finding value in Test-Kitchen for DSC, to the unexpected honor of being promoted to Principal Engineer at Chef.
I am so very grateful for my co-workers (past and present) and the Chef and PowerShell communities. Because of all of you, I am blessed with the opportunity to help do work that matters to the communities that mean the most to me.</description>
    </item>
    
    <item>
      <title>Delivering Expectations</title>
      <link>https://stevenmurawski.com/2016/03/17/delivering-expectations/</link>
      <pubDate>Thu, 17 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/03/17/delivering-expectations/</guid>
      <description>TL;DR; Microsoft (specifically the PowerShell team in this case) is speeding up. We are seeing new features faster and more frequently. This comes at a cost (when compared to the old three year ship cycle). Documentation is rougher (or missing), some things break, and some do not work as expected. People/hours are finite and there is only so much the PowerShell team can do in a ship cycle, but we have more ship cycles so we can see things improved faster.</description>
    </item>
    
    <item>
      <title>&#39;I am not a Developer&#39; is Bull Feces</title>
      <link>https://stevenmurawski.com/2016/03/04/i-am-not-a-developer-is-bull-feces/</link>
      <pubDate>Fri, 04 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/03/04/i-am-not-a-developer-is-bull-feces/</guid>
      <description>But I&amp;rsquo;m a Sysadmin/Scripter/Commandline junkie I&amp;rsquo;ve been guilty of this in the past, but one thing I have come to realize is that scripting is programming. Running ad-hoc commands at the command line is programming. When you type some content that directs the computer to do some work, you are programming.
So, when you say &amp;ldquo;I&amp;rsquo;m not a developer&amp;rdquo;, I hear:
 I write &amp;ldquo;throw away&amp;rdquo; scripts I don&amp;rsquo;t use source control I don&amp;rsquo;t build reusable scripts I don&amp;rsquo;t test my scripts Anyone should be able to do this  Stop devaluing my profession Scripting and command line work is important.</description>
    </item>
    
    <item>
      <title>DSC Partial Configurations are the Devil&#39;s Workshop</title>
      <link>https://stevenmurawski.com/2016/03/04/dsc-partial-configurations-are-the-devils-workshop/</link>
      <pubDate>Fri, 04 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/03/04/dsc-partial-configurations-are-the-devils-workshop/</guid>
      <description>Windows Management Framework 5 introduces Partial Configurations. Partial configurations are basically named containers in the Local Configuration Manager (LCM) that can pull from different sources. Each container can have certain resources reserved for it and only it. Then when the LCM is ready to validate the current configuration, it will put together all the partial configurations into one configuration to validate on the node.
Let&amp;rsquo;s make configurations less reliable so your teams still don&amp;rsquo;t have to talk So, this sounds great!</description>
    </item>
    
    <item>
      <title>Updating Test-Kitchen in ChefDK</title>
      <link>https://stevenmurawski.com/2016/03/04/updating-test-kitchen-in-chefdk/</link>
      <pubDate>Fri, 04 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/03/04/updating-test-kitchen-in-chefdk/</guid>
      <description>Hey, New Shiny Sometimes, you just don&amp;rsquo;t want to wait for the latest/greatest features AND you want to have the convenience that ChefDK provides (without having to figure out [bundler]()).
For example, while I&amp;rsquo;m happily writing code with the current (as of this post) ChefDK 0.11.2, a newer version of Test-Kitchen has shipped which has a bunch of bugfixes and now supports cross-platform negotiate authentication.
If we weren&amp;rsquo;t talking about ChefDK and just had a more vanilla Ruby environment, we could just gem install test-kitchen and be done with it.</description>
    </item>
    
    <item>
      <title>What Direction Should We Go?</title>
      <link>https://stevenmurawski.com/2016/02/05/what-direction-should-we-go/</link>
      <pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/02/05/what-direction-should-we-go/</guid>
      <description>I get a lot of questions around Chef, DSC, and SCCM from customers, conference attendees, community members, and others and I&amp;rsquo;m going try to answer it here.
Question: Why Should I Use DSC Rather than SCCM? Snarky Response Don&amp;rsquo;t.
More Reasonable Response It depends. Unfortunately there isn&amp;rsquo;t a definitive answer as the choice is context sensitive.
If you aren&amp;rsquo;t experiencing any pain with SCCM and you&amp;rsquo;re in touch with your business folks and are meeting their needs in a timely fashion, don&amp;rsquo;t change.</description>
    </item>
    
    <item>
      <title>What Do You Expect From Windows Containers?</title>
      <link>https://stevenmurawski.com/2016/01/20/what-do-you-expect-from-windows-containers/</link>
      <pubDate>Wed, 20 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/01/20/what-do-you-expect-from-windows-containers/</guid>
      <description>What they are and what they aren&amp;rsquo;t I&amp;rsquo;ve been fielding a lot of questions about windows containers, so here&amp;rsquo;s a quick brain dump of one of the common misconceptions. One of the biggest is whether or not you can run multiple versions of Windows server in containers.
I can run different major OS versions in containers - FALSE Unlike Linux, where OS distributions are more decoupled from the kernel versions, each major version of Windows server is a different version of the kernel.</description>
    </item>
    
    <item>
      <title>Welcome 2016</title>
      <link>https://stevenmurawski.com/2016/01/19/welcome-2016/</link>
      <pubDate>Tue, 19 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2016/01/19/welcome-2016/</guid>
      <description>It&amp;rsquo;s January 2016 And the start of a new year. I&amp;rsquo;m a bit late getting this post out, but the start of this year has been rough.
New Year&amp;rsquo;s Eve started with my son getting pretty sick (and remaining so for over a week) and on Sunday the third, a beloved family pet passed. My SSD with all my source files and VM images decided to die that weekend as well.</description>
    </item>
    
    <item>
      <title>Setting Up For Success</title>
      <link>https://stevenmurawski.com/2015/10/13/setting-up-for-success/</link>
      <pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/10/13/setting-up-for-success/</guid>
      <description>I get a lot of questions about how to get started with configuration management (whether DSC or Chef). There are a few things that you can do to prepare yourself for diving into configuration management. Ideally, you&amp;rsquo;d want to get familiar with this stuff first, since learning a bunch of new ideas all at once can be a bit overwhelming.
Want To Do Configuration Management? Set yourself up for success and start learning in pieces.</description>
    </item>
    
    <item>
      <title>What&#39;s Really Going On?</title>
      <link>https://stevenmurawski.com/2015/10/13/whats-really-going-on/</link>
      <pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/10/13/whats-really-going-on/</guid>
      <description>Outages One constant in IT Operations is that things will fail, sometimes causing an outage. If you work in a traditional IT organization, this can be a trying time. People are scrambling to see what broke and how to restore service. Managers are getting conference bridges going to pull in the engineers to ask them if they found the problem and have fixed it yet. Executives are calling for the responsible person to be delivered as a sacrifice to appease the gods of complexity, following the doctrine of &amp;ldquo;if we fire all those who make mistakes, we won&amp;rsquo;t have any more outages.</description>
    </item>
    
    <item>
      <title>Should IT Pro&#39;s Program?</title>
      <link>https://stevenmurawski.com/2015/09/29/should-it-pros-program/</link>
      <pubDate>Tue, 29 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/09/29/should-it-pros-program/</guid>
      <description>This post is inspired by an email exchange on the PowerShell MVP mailing list.
The Eternal Debate In Microsoft heavy shops (where I&amp;rsquo;ve mostly worked), there seems to be this notion that IT Pro&amp;rsquo;s (what sysadmins in the Microsoft space are called) shouldn&amp;rsquo;t have to dirty their hands with learning a programming language.
The Shell Should Suffice While PowerShell is a vast ecosystem and is growing at a rapid pace, it is not the ulitmate one-stop-shop for all your automation needs.</description>
    </item>
    
    <item>
      <title>Stop Crippling WinRM</title>
      <link>https://stevenmurawski.com/2015/09/21/stop-crippling-winrm/</link>
      <pubDate>Mon, 21 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/09/21/stop-crippling-winrm/</guid>
      <description>Know what you are configuring Most folks who use Chef or other projects that do lots of stuff over WinRM have to customize the settings. This can be to allow Basic authentication, increase then number of default shells per user, or the most commonly to increase the maximum memory a shell can use.
Everyone has their pet script for doing this, usually based on bumping up limits that were the default on Server 2008 R2.</description>
    </item>
    
    <item>
      <title>Essential DevOps At the #PSHSummit</title>
      <link>https://stevenmurawski.com/2015/09/15/Essential-DevOps-At-PSHSummit/</link>
      <pubDate>Tue, 15 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/09/15/Essential-DevOps-At-PSHSummit/</guid>
      <description>Kicking off the PowerShell Summit EU Yesterday morning, I held one of the starting sessions for the PowerShell Summit EU - entitled Essential Skills for a DevOps World and we had a great conversation as we walked through the concepts that help enable consistent flow (the first way), feedback (the second way), and velocity (the third way).
You can find my deck here and I&amp;rsquo;ll add the video link once it is posted.</description>
    </item>
    
    <item>
      <title>New Blog Effort</title>
      <link>https://stevenmurawski.com/2015/09/10/new-blog-effort/</link>
      <pubDate>Thu, 10 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/09/10/new-blog-effort/</guid>
      <description>Blog Migration I&amp;rsquo;ve been running my blog on Squarespace for quite some time and I&amp;rsquo;m mostly happy with it. However, I&amp;rsquo;ve been writing my posts in Markdown and the code highlighting suppport from Markdown in Squarespace is horrid.
I thought I&amp;rsquo;d try to move to a Jekyll based blog, with the source in Github and deployed via AppVeyor.
I&amp;rsquo;m sure there are going to be a lot of posts that need a bit of love, so there are links at the bottom of the page to the source for each post, as well as for the issues page on GitHub.</description>
    </item>
    
    <item>
      <title>Moving in to Open Source</title>
      <link>https://stevenmurawski.com/2015/08/01/moving-in-to-open-source/</link>
      <pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/08/01/moving-in-to-open-source/</guid>
      <description>Journey into Open Source When I started to use PowerShell, I had just entered the IT world. I was a brand new sysadmin working in a brand new position for a local police department.
I learned PowerShell by asking and answering questions, on #powershell in IRC and on the fledgling StackOverflow site. I gave my first user group presentation about PowerShell. It was awesome and I wanted to tell the world.</description>
    </item>
    
    <item>
      <title>My First Year With Chef</title>
      <link>https://stevenmurawski.com/2015/07/01/one-year-at-chef/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/07/01/one-year-at-chef/</guid>
      <description>I just had my one year anniversary with Chef (July 15th) and I&amp;rsquo;ve been reflecting on what a change that has been for me.
I started at Chef as a Technical Community Manager, where my primary role was to talk and train about Chef, DSC, PowerShell, and all the things that go into being successful with configuration management.
After my first month getting my feet on the ground, actually using Chef and meeting my team and others at Chef, I started hitting conferences and events.</description>
    </item>
    
    <item>
      <title>Building Your Chef Workstation on Windows</title>
      <link>https://stevenmurawski.com/2015/06/01/building-your-chef-workstation-on-windows/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/06/01/building-your-chef-workstation-on-windows/</guid>
      <description>UPDATE 2016-08-22 - I&amp;rsquo;ve got a shorter, faster method now.
So you want to Chef on Windows? I&amp;rsquo;ve recently been rebuilding my workstations and I figured it was time to automate some of my setup and figured it would be easier to share this way too. Fortunately, another Chef, Adam Edwards has a good start on this with his winbox cookbook. (Another coworker - Joshua Timberman has a cookbook called Pantry for a similar purpose, but I haven&amp;rsquo;t taken the time to try that out yet.</description>
    </item>
    
    <item>
      <title>DSC People - Let&#39;s Stop Using &#39;c&#39; Now</title>
      <link>https://stevenmurawski.com/2015/06/01/dsc-people-lets-stop-using-c-now/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/06/01/dsc-people-lets-stop-using-c-now/</guid>
      <description>Enough Already! The &amp;lsquo;c&amp;rsquo; prefix for DSC Resources was proffered up by Microsoft as a way to fork their experimental (&amp;ldquo;x&amp;rdquo; prefixed) resources since they couldn&amp;rsquo;t get them released in a way that they could take contributions. This provided a way for the community to update those resources and share them back, without a name collision.
That&amp;rsquo;s all changed now with the PowerShell Team&amp;rsquo;s GitHub organization. Now, we can contribute directly to the PowerShell Team&amp;rsquo;s community resources.</description>
    </item>
    
    <item>
      <title>Need to Test if WinRM is Listening?</title>
      <link>https://stevenmurawski.com/2015/06/01/need-to-test-if-winrm-is-listening/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/06/01/need-to-test-if-winrm-is-listening/</guid>
      <description>One of the most common problems I come across at Chef is diagnosing whether or not WinRM is actually listening or accessible on a remote node. This can be a problem with
knife bootstrap windows winrm
or
knife winrm
or in Test-Kitchen or Chef Provisioning.
Testing from Windows From Windows, there is a PowerShell command - Test-WSMan.
Checks that the WinRM service is listening  Replace 192.168.1.82 with the IP or hostname of the target node  test-wsman 192.</description>
    </item>
    
    <item>
      <title>Starting with Configuration Management?  Be Realisitic With Your Expectations</title>
      <link>https://stevenmurawski.com/2015/06/01/starting-with-configuration-management-be-realisitic-with-your-expectations/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/06/01/starting-with-configuration-management-be-realisitic-with-your-expectations/</guid>
      <description>There is a great question that came into the PowerShell.Org forums the other day from Marty Bowman.
Scenario   Hello PowerShell community. I&amp;rsquo;m looking for thoughts and feedback on the following scenario at work as we start to dive into DSC.
My management has bought into the promise of DSC. I&amp;rsquo;m glad for that (truly). But, the major kick-off to this effort was to hire in a consultant for 3-months, during which we: 1) learn version control, 2) build a server baseline in DSC, 3) build a test framework (pester), 4) Do this using an agile 2-week sprint methodology, 5) at the end, deliver base OS build config via the new DSC configs; 3 of us are working on this.</description>
    </item>
    
    <item>
      <title>Want the Latest ChefDK on Windows?</title>
      <link>https://stevenmurawski.com/2015/06/01/want-the-latest-chefdk-on-windows/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/06/01/want-the-latest-chefdk-on-windows/</guid>
      <description>Chocolatey? choco install chefdk
PowerShell PackageManagement (formerly OneGet) install-package chefdk
Don&amp;rsquo;t have either of those? Well, get on the ball and grab WMF 5, Windows 10, or install Chocolatey!
OR From our Omnitruck site, with a variant of the &amp;ldquo;curl | bash&amp;rdquo; install.
iwr -usebasic https://omnitruck.chef.io/install.ps1 | iex; install chefdk
Can&amp;rsquo;t do any of that? Grab it from our Downloads page.</description>
    </item>
    
    <item>
      <title>I&#39;m Over You</title>
      <link>https://stevenmurawski.com/2015/05/01/im-over-you/</link>
      <pubDate>Fri, 01 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/05/01/im-over-you/</guid>
      <description>Some of my recent blog posts have spurred people to share anecdotes about friends, co-workers, and others who &amp;ldquo;just don&amp;rsquo;t get it&amp;rdquo;.
Let me be clear -
If you don&amp;rsquo;t care about your career, neither do I (and nor your employer). Who do I care about? I care about the the admin who (not inclusive, but you get the idea):
 Is frustrated by &amp;ldquo;status quo&amp;rdquo; Wants to improve the flow of work Cares more about getting things done than meeting arbitrary metrics Talks to people in other parts of their organization - because they care about what it takes to make business happen.</description>
    </item>
    
    <item>
      <title>PowerShell 3 - WinRM MaxMemoryPerShellMB Is Wrong</title>
      <link>https://stevenmurawski.com/2015/05/01/powershell-3-winrm-maxmemorypershellmb-is-wrong/</link>
      <pubDate>Fri, 01 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/05/01/powershell-3-winrm-maxmemorypershellmb-is-wrong/</guid>
      <description>I was trying to test some Chef configurations on a Server 2012 image and kept hitting out of memory errors - StackOverflowExceptions, failures to load the CLR, and failures to start a shell due to limited page file.
It turns out that Windows Management Framework 3 doesn&amp;rsquo;t actually use the MaxMemoryPerShellMB setting in Wsman:\localhost\Shell and uses a default 150MB value, not the 1024MB default the WSMAN configuration shows.
There is a hotfix out, but you need to request it.</description>
    </item>
    
    <item>
      <title>The Seduction of the Management Abstraction</title>
      <link>https://stevenmurawski.com/2015/05/01/the-seduction-of-the-management-abstraction/</link>
      <pubDate>Fri, 01 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/05/01/the-seduction-of-the-management-abstraction/</guid>
      <description>DISCLAIMER: This is not only about configuring network settings. That is an example.
Abstractions are a GOOD THING Abstractions, in the IT context, are higher level models on top of more complex components. This allows people who are relatively unfamiliar to quickly gain a minimum level of functionality in new or rarely used areas.
What are management abstractions? At their most basic level, management abstractions are the common idioms that we refer to in managing our systems.</description>
    </item>
    
    <item>
      <title>Time For a Change (of Environmental Variables)</title>
      <link>https://stevenmurawski.com/2015/05/01/time-for-a-change-of-environmental-variables/</link>
      <pubDate>Fri, 01 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/05/01/time-for-a-change-of-environmental-variables/</guid>
      <description>Environmental variables can change for a number of reasons and there are a few key things to remember about why you likely won&amp;rsquo;t see those changes reflected immediately.
 Processes get their environmental variables from their parent process. Not everything that changes an environmental variable sends a broadcast that the settings have changed. Only top-level (below Windows Explorer) processes can listen for those broadcasts. Not every process reacts to those messages - PowerShell, cmd.</description>
    </item>
    
    <item>
      <title>Forward My Good SysAdmin, Forward I Say!</title>
      <link>https://stevenmurawski.com/2015/04/01/forward-my-good-sysadmin-forward-i-say/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/04/01/forward-my-good-sysadmin-forward-i-say/</guid>
      <description>If you are in the IT industry and you haven&amp;rsquo;t figured out yet that new versions of operating systems, programs, languages, deployment technologies, etc.. are going to keep coming, then I&amp;rsquo;ve got an unwelcome surprise for you.
And those changes are coming&amp;hellip; Example:
 Windows Server 2003 -&amp;gt; Windows Server 2003 R2 / 2.5 years / small jump Windows Server 2003 R2 -&amp;gt; Windows Server 2008 / 2 years / bigger jump Windows Server 2008 -&amp;gt; Windows Server 2008 R2 / 1.</description>
    </item>
    
    <item>
      <title>I&#39;m Too Busy To Test</title>
      <link>https://stevenmurawski.com/2015/04/01/im-too-busy-to-test/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/04/01/im-too-busy-to-test/</guid>
      <description>Or My Boss or Client Will Not Give Me The Time So, they want you to create a script/function/module/whatever and you deliver a working, fully functional piece of work product from the first line you type to the end with no experimentation or testing in the middle?
I need to work with you because I&amp;rsquo;ve never seen that happen, except in the most trivial of cases. I think I&amp;rsquo;m pretty good with a line of code, and I make plenty of mistakes (check out the history of any of my projects).</description>
    </item>
    
    <item>
      <title>Stick and Move</title>
      <link>https://stevenmurawski.com/2015/04/01/stick-and-move/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/04/01/stick-and-move/</guid>
      <description>&amp;ldquo;Float Like a Butterfly, Sting Like a Bee&amp;rdquo; There is never a great &amp;ldquo;hunker down on this version&amp;rdquo; story in IT.
Steady, Steady&amp;hellip; Stability of an operating system is an illusion. Stability assumes that the environment that interacts with that operating system also stays stagnant.
Change is coming That is not the case. All the latest buzzwords are changing the dynamics of our server deployments.
 Are you &amp;ldquo;cloud ready&amp;rdquo;?</description>
    </item>
    
    <item>
      <title>There Is A New Windows Server, They Call Him Nano</title>
      <link>https://stevenmurawski.com/2015/04/01/there-is-a-new-windows-server-they-call-him-nano/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/04/01/there-is-a-new-windows-server-they-call-him-nano/</guid>
      <description>After the announcement of Nano there is definitely a more anti-Nano/Core/MinShell feeling in the Windows IT Pro community and I understand the root of that angst. That said, Nano is the direction we need to head. The introduction of Server Core heralded this back with Server 2008. We had Core&amp;rsquo;s reach extended in Server 2008 R2. Server 2012 made Core no longer a life-choice and allowed to add the GUI (well, at least if you started, went down to Core, then came back up.</description>
    </item>
    
    <item>
      <title>You&#39;ll Pry the GUI from My Cold Dead Hands</title>
      <link>https://stevenmurawski.com/2015/04/01/youll-pry-the-gui-from-my-cold-dead-hands-1/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/04/01/youll-pry-the-gui-from-my-cold-dead-hands-1/</guid>
      <description>I won&amp;rsquo;t use Windows Server if there is no GUI Get over yourself. We&amp;rsquo;ve had remote management tools for years (going back to the admin pack during the Server 2003 days). You need at least basic command line skills to do simple things like checking network connectivity, formating file systems, and copying files.
&amp;ldquo;If you don&amp;rsquo;t want to learn anything new, don&amp;rsquo;t work in IT&amp;rdquo; via @jsnover on @Geek_Whisperers http://t.</description>
    </item>
    
    <item>
      <title>Chef Community Triage and Where You Can Help!</title>
      <link>https://stevenmurawski.com/2015/03/01/chef-community-triage-and-where-you-can-help/</link>
      <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/03/01/chef-community-triage-and-where-you-can-help/</guid>
      <description>Our Triage Process The Community Engineering team, along with others in Chef engineering, have been working to triage issues that come in on our open source projects.
Part of that process includes identifying and categorizing issues and assigning them to milestones.&amp;nbsp; Those milestones are general targets and do not, repeat, do not mean that they&amp;rsquo;ll be addressed for any particular release.&amp;nbsp; What the milestones do is provide a backlog to work from for those release points.</description>
    </item>
    
    <item>
      <title>Git Gardening with Git Prune</title>
      <link>https://stevenmurawski.com/2015/03/01/git-gardening-with-git-prune/</link>
      <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/03/01/git-gardening-with-git-prune/</guid>
      <description>I work on a number of projects on GitHub now, with Chef (client) being one of the largest and most active.
Every time I fetch from GitHub, I get all the current branches. &amp;nbsp;Branches tend to be short lived in this project, existing solely for a feature or a bugfix (which allows us to use Pull Requests for code reviews and discussion). &amp;nbsp;However, when a branch gets removed from GitHub&amp;rsquo;s version of the repository, that change doesn&amp;rsquo;t sync down to me when I fetch changes.</description>
    </item>
    
    <item>
      <title>I&#39;m a Chef Core Maintainer Now!</title>
      <link>https://stevenmurawski.com/2015/03/01/im-a-chef-core-maintainer-now/</link>
      <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/03/01/im-a-chef-core-maintainer-now/</guid>
      <description>At Chef, we recently doubled down on open source. &amp;nbsp;There were a few changes in the Chef 12 time frame that illustrate that.
First, Chef Server is fully open source, there is &amp;ldquo;enterprise Chef&amp;rdquo; and &amp;ldquo;open source Chef&amp;rdquo;. &amp;nbsp;Chef Server is Chef Server and that&amp;rsquo;s it. &amp;nbsp;There are premium features (read &amp;ldquo;for pay&amp;rdquo; over 25 nodes), but they build on the existing open source Chef Server. &amp;nbsp;If you subscribe to the premium features and decide you don&amp;rsquo;t like them or they don&amp;rsquo;t add enough value, you don&amp;rsquo;t get locked out of your Chef Server and&amp;nbsp;you don&amp;rsquo;t loose any functionality (outside of the premium features you no longer subscribe to).</description>
    </item>
    
    <item>
      <title>My 2014 EOL and the 2015 Launch</title>
      <link>https://stevenmurawski.com/2015/01/01/my-2014-eol-and-the-2015-launch/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2015/01/01/my-2014-eol-and-the-2015-launch/</guid>
      <description>2014 has been a phenomenal year and 2015 is shaping up to be as good, if not better!
2014 Starting the year with Stack Exchange, DSC, and SQL Server 2014 started with a lot of work around Desired State Configuration. At Stack Exchange, there was a data center move looming up ahead as our colo facility at the time was unable to renew their lease. One of the challenges we faced was getting our DR facility up to parity (on a service level) with our primary data center.</description>
    </item>
    
    <item>
      <title>Chef Fundamentals for Windows with Me in LA Next Week</title>
      <link>https://stevenmurawski.com/2014/12/01/chef-fundamentals-for-windows-with-me-in-la-next-week/</link>
      <pubDate>Mon, 01 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/12/01/chef-fundamentals-for-windows-with-me-in-la-next-week/</guid>
      <description>Come join me next week in LA for the Chef Windows Fundamentals class! &amp;nbsp;Use the promo code DAILYSPECIAL for 10% off the cost.&amp;nbsp;
Two day course agenda:
 Overview of Chef Workstation setup Bootstrapping your first node Dissecting your first Chef run Introducing the node object Using Chef resources to build your first cookbook Using node and cookbook attributes and templates to make your recipes dynamic Adding cookbook dependencies to leverage existing functionality Experimenting with template variables, notifications, and controlling idempotency Using recipe inclusion to keep your recipes easy to read and manage Bringing server-side resources into your recipes with data bags and search Defining roles to group similar functionality Defining environments to use the same structural configuration across operational environments (like development, Q/A, and production) Using Chef Supermarket and community cookbooks Resources to further your exploration of Chef  More details and registration link&amp;nbsp;on the Chef Events page.</description>
    </item>
    
    <item>
      <title>Time is Running Out</title>
      <link>https://stevenmurawski.com/2014/12/01/time-is-running-out/</link>
      <pubDate>Mon, 01 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/12/01/time-is-running-out/</guid>
      <description>For Great Kanban and Config Management Training in LA For $100 bucks, you can have two days of training - one focused on making work in progress visible in operations and the second based on making system configuration visible with configuration management tools like PowerShell Desired State Configuration and Chef. Go and register now! &amp;nbsp;</description>
    </item>
    
    <item>
      <title>What is DevOps? As explained by Nathen Harvey</title>
      <link>https://stevenmurawski.com/2014/12/01/what-is-devops-as-explained-by-nathen-harvey/</link>
      <pubDate>Mon, 01 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/12/01/what-is-devops-as-explained-by-nathen-harvey/</guid>
      <description>Nathen Harvey answers this question is a great video.
If you find this idea of DevOps interesting and you are in the LA area - join Dominica DeGrandis, Jessica DeVita, J. Paul Reed, and myself for a two day workshop about leveling up your IT Operations game with Kanban and Configuration Management.
NSFW (not safe for work)

And an edited version</description>
    </item>
    
    <item>
      <title>#DSC on #vBrownBag DevOps Series Tonight</title>
      <link>https://stevenmurawski.com/2014/11/01/dsc-on-vbrownbag-devops-series-tonight/</link>
      <pubDate>Sat, 01 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/11/01/dsc-on-vbrownbag-devops-series-tonight/</guid>
      <description>I&amp;rsquo;ll be joining #vBrownBag folks tonight at 7:30 PM Central to talk about DSC.
If you want to join in you&amp;rsquo;ll find more details at the #vBrownBag site. &amp;nbsp;
If you want to learn more about Chef and VMWare, check out my colleague Yvo Van Doorn&amp;rsquo;s #vBrownBag talk.</description>
    </item>
    
    <item>
      <title>R2 is a Separate Release</title>
      <link>https://stevenmurawski.com/2014/11/01/r2-is-a-separate-release/</link>
      <pubDate>Sat, 01 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/11/01/r2-is-a-separate-release/</guid>
      <description>This just frustrates me to no end&amp;hellip;
The &amp;ldquo;R2&amp;rdquo; releases of Windows Server products is a separate OS release. &amp;nbsp;The fact that they are also separate OS releases impacts their support cycles and what software packages are supported.
Most people are rather sloppy about how they refer to OS releases and use 2008 to refer to 2008 or 2008 R2. &amp;nbsp;This is BAD! &amp;nbsp;There are significant differences between Windows Server 2008 and 2008 R2.</description>
    </item>
    
    <item>
      <title>Special Event - Kanban and DSC</title>
      <link>https://stevenmurawski.com/2014/11/01/special-event-kanban-and-dsc/</link>
      <pubDate>Sat, 01 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/11/01/special-event-kanban-and-dsc/</guid>
      <description>First up - on December 9th and 10th I&amp;rsquo;m working with Jessica DeVita, Dominica DeGrandis, and J. Paul Reed to help put on a two day event in Los Angeles designed to help you level up your operations game. &amp;nbsp;
This is training that would normally run over a $1000 - and you can go for $100 - with all the proceeds going to Girls Who Code, which is a national nonprofit working to close the gender gap in technology and engineering.</description>
    </item>
    
    <item>
      <title>PowerShell Summit EU - The Essence of Community</title>
      <link>https://stevenmurawski.com/2014/10/01/powershell-summit-eu-the-essence-of-community/</link>
      <pubDate>Wed, 01 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/10/01/powershell-summit-eu-the-essence-of-community/</guid>
      <description>I&amp;rsquo;m sitting on a plane heading to Seattle on my way back from the PowerShell Summit EU (on my way to the Chef Summit in Seattle).
I can only say that I was completely blown away by the attendees of the conference. &amp;nbsp;This conference drew people from all over Europe (and a handful of folks from North America). &amp;nbsp;
I have been led to expect European audiences to be less willing to engage speakers with questions/comments.</description>
    </item>
    
    <item>
      <title>The Cloud is Coming...</title>
      <link>https://stevenmurawski.com/2014/10/01/the-cloud-is-coming/</link>
      <pubDate>Wed, 01 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/10/01/the-cloud-is-coming/</guid>
      <description>Interesting twitter conversation between Jeffrey Snover and several others on Twitter about the recent Cloud Platform System (CPS) announced in conjunction with Dell. &amp;nbsp;
TL;DR; Companies are trying to implement private clouds (and failing). &amp;nbsp; Isn&amp;rsquo;t a private cloud just your own data center with some virtualization tossed in? &amp;nbsp;Nope! &amp;nbsp;There is a level of automation and standardization of offerings to the consumers of your private cloud resources. &amp;nbsp;Networking, storage, and compute all become part of the offering that is surfaced to internal consumers.</description>
    </item>
    
    <item>
      <title>There Is No Configuration Management Special Sauce</title>
      <link>https://stevenmurawski.com/2014/10/01/there-is-no-configuration-management-special-sauce/</link>
      <pubDate>Wed, 01 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/10/01/there-is-no-configuration-management-special-sauce/</guid>
      <description>I get asked quite frequently &amp;ldquo;Can I do $SomeTask with (DSC|Chef)&amp;rdquo;. &amp;nbsp;My answer is almost always a qualified &amp;ldquo;yes&amp;rdquo;.
Two Motivations When I get this question, very often there are two questions lying in the background. &amp;nbsp;
 If I roll up my sleeves and dive into it, can I create automation for $SomeTask with (DSC|Chef)?The first question is pretty close to what was asked. &amp;nbsp;The intent of this asker is to determine if there are hidden &amp;ldquo;gotchas&amp;rdquo; in automating a task with one of the configuration management platforms or if $TargetSoftware allows $SomeTask to be done in an automated fashion.</description>
    </item>
    
    <item>
      <title>Why Chef? (Revisited)</title>
      <link>https://stevenmurawski.com/2014/09/01/why-chef-revisited/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/09/01/why-chef-revisited/</guid>
      <description>Setting the table First off, let me get on record - I LOVE DSC. &amp;nbsp;When I was at Stack Exchange, I rolled Desired State Configuration out during the Server 2012 R2 preview timeframe. &amp;nbsp;I coddled it through the move to RTM and then to General Availability. &amp;nbsp;At the PowerShell Summit in April, Jeffrey Snover asked how I liked the WMF5 preview. &amp;nbsp;I had to tell him I hadn&amp;rsquo;t really played much with it.</description>
    </item>
    
    <item>
      <title>You Have Viruses!</title>
      <link>https://stevenmurawski.com/2014/09/01/you-have-viruses/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/09/01/you-have-viruses/</guid>
      <description>I had a great experience today. &amp;nbsp;I received a phone call from someone purporting to be from Microsoft Support, who was calling because my machine was infected with viruses. &amp;nbsp;
When he started down that line, I knew where this was going, so I spun up a virtual machine with Vagrant.
Here&amp;rsquo;s a rough transcription (from memory and cutting out gems like, &amp;ldquo;look for the Windows key, it looks like four little flags&amp;rdquo;)</description>
    </item>
    
    <item>
      <title>DSC...  What is it for, really?</title>
      <link>https://stevenmurawski.com/2014/08/01/dsc-what-is-it-for-really/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/08/01/dsc-what-is-it-for-really/</guid>
      <description>An email recently came across one of the mailing lists I subscribe to. &amp;nbsp;I wanted to share my answer here, because this is an important discussion.
Is DSC for Setup or Management? Yes (notice, it&amp;rsquo;s not an XOR)
In my opinion, DSC (and Chef) is for setup and the management of the structural configuration of the system. &amp;nbsp; To directly address some of the questioners initial points:
 Do I need to develop custom DSC resources (for example to create DFS folders and links) and apply a new configuration each time I have to create/or modify a DFS link?</description>
    </item>
    
    <item>
      <title>Dealing With Bad Behavior in a Community</title>
      <link>https://stevenmurawski.com/2014/08/01/dealing-with-bad-behavior-in-a-community/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/08/01/dealing-with-bad-behavior-in-a-community/</guid>
      <description>It may come as no surprise, but I&amp;rsquo;m pretty active in a variety of technically focused communities. &amp;nbsp; Most recently, I&amp;rsquo;ve become a Community Manager for Chef and joined the Board of Directors for LOPSA. &amp;nbsp;I&amp;rsquo;ve been an active member of the PowerShell community for about as long as I&amp;rsquo;ve been in IT. &amp;nbsp;I try to keep active in my local technical community.
There are a few things in these communities I&amp;rsquo;ve been silent on that continue to rear their ugly heads and if I don&amp;rsquo;t address it, I&amp;rsquo;m just as guilty as those who perpetrated those action.</description>
    </item>
    
    <item>
      <title>Future-proofing Your Career or Reading Tea Leaves?</title>
      <link>https://stevenmurawski.com/2014/08/01/future-proofing-your-career-or-reading-tea-leaves/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/08/01/future-proofing-your-career-or-reading-tea-leaves/</guid>
      <description>Don Jones provided a keynote at TechMentor this morning and I tweeted a fragment of his career advice.
&amp;ldquo;Make sure your career is lined up with upcoming changes in IT&amp;rdquo; via @concentrateddon #TechMentor #career — Steven Murawski (@StevenMurawski) August 13, 2014 
Jim Kimball astutely asks
[@StevenMurawski](https://twitter.com/StevenMurawski) [@concentrateddon](https://twitter.com/concentrateddon) hmmm. How to guess correctly? — Jim Kimball (@jimkimball) [August 13, 2014](https://twitter.com/jimkimball/statuses/499682281611882496)  Don and Jim continue
@jimkimball @StevenMurawski observe evidence. Extrapolate.</description>
    </item>
    
    <item>
      <title>Join me for a PowerShell.Org TechSession</title>
      <link>https://stevenmurawski.com/2014/08/01/join-me-for-a-powershellorg-techsession/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/08/01/join-me-for-a-powershellorg-techsession/</guid>
      <description>On Thursday, August 7th, I&amp;rsquo;ll be doing a introductory look at building a DSC Resource and how we can use testing tools like Pester to make that resource resilient.
&amp;nbsp;If you are going to TechMentor the following week, I&amp;rsquo;ll be diving deeper on this topic on Thursday the 14th.
Writing and Testing DSC Resources
 </description>
    </item>
    
    <item>
      <title>Legacy Environments Are OK Too, Right?</title>
      <link>https://stevenmurawski.com/2014/08/01/legacy-environments-are-ok-too-right/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/08/01/legacy-environments-are-ok-too-right/</guid>
      <description>Chris Hunt was kind enough to offer a response to my post yesterday and voiced an opinion I&amp;rsquo;ve heard from many others. &amp;nbsp;I&amp;rsquo;d like to address his comments. (And Chris, I do value your opinion, I just couldn&amp;rsquo;t disagree more. :) )
Legacy Environments Will Be Around  This discussion assumes you are a person who places high values on working in an environment with the latest and greatest. Considering there are still mainframes and a ton of Windows XP machines, I think it&amp;rsquo;s safe to say that even outdated skills will provide a viable career path for many years.</description>
    </item>
    
    <item>
      <title>Tonight - On PowerBreakfast...</title>
      <link>https://stevenmurawski.com/2014/08/01/tonight-on-powerbreakfast/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/08/01/tonight-on-powerbreakfast/</guid>
      <description>Yep, you read that right.. Due to the magic of timezones, this evening (8/1/2014) at 8:30 PM Eastern, I&amp;rsquo;ll be giving a talk for the Singapore PowerShell Users Group PowerBreakfast series. &amp;nbsp;This talk will be recorded (see below for details on where to find this talk and previous ones in the series).
The Talk Desired State Configuration in the Real World Desired State Configuration (DSC) is getting a lot of attention these days and there are examples abound.</description>
    </item>
    
    <item>
      <title>Chef and DSC - Wanna Try It?</title>
      <link>https://stevenmurawski.com/2014/07/01/chef-and-dsc-wanna-try-it/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/07/01/chef-and-dsc-wanna-try-it/</guid>
      <description>At the Chef meetup in Seattle on Tuesday night, Adam Edwards (our dev lead on our Windows efforts) made the DSC cookbook available. &amp;nbsp;
This is a preview of functionality that will make its way into our core platform, but it highlights the direction we are taking to integrate DSC features.
I&amp;rsquo;ll be experimenting with this myself in the very near future, but feel free to clone the cookbook and start playing around and hammering me with your questions.</description>
    </item>
    
    <item>
      <title>Is the Chef Learning Curve Worth It?</title>
      <link>https://stevenmurawski.com/2014/07/01/is-the-chef-learning-curve-worth-it/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/07/01/is-the-chef-learning-curve-worth-it/</guid>
      <description>Wow.. I haven&amp;rsquo;t even had my first day at Chef and I&amp;rsquo;ve landed a doozy of a question from Twitter.
@StevenMurawski why would you want to use chef with windows instead of just DSC and Powershell? What would be main benefit / gain? Thanks — IT Engineer Jobs (@ITEngineerJobs) July 13, 2014
 @ITEngineerJobs DSC is a feature, not a full product. Chef has a more complete story and is working on leveraging DSC (best of both worlds) — Steven Murawski (@StevenMurawski) July 13, 2014</description>
    </item>
    
    <item>
      <title>Next, Next, Next, Finished is Not Job Security</title>
      <link>https://stevenmurawski.com/2014/07/01/next-next-next-finished-is-not-job-security/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/07/01/next-next-next-finished-is-not-job-security/</guid>
      <description>Between interviewing for my new role and interviewing possible replacements for myself at Stack Exchange, I&amp;rsquo;ve been thinking a lot about my career path and that of other SysAdmins I know.&amp;nbsp; I wanted to share some of the thoughts bouncing around in my skull.
One thing I&amp;rsquo;ve settled on for sure is that my investment in PowerShell has been a real boon to my career.&amp;nbsp; PowerShell alone hasn&amp;rsquo;t opened any doors, but PowerShell has offered me a way to interact with a number of Windows Server related products and features in a way never anticipated by UI&amp;rsquo;s that offer a particular workflow.</description>
    </item>
    
    <item>
      <title>Want to Talk?</title>
      <link>https://stevenmurawski.com/2014/07/01/want-to-talk/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/07/01/want-to-talk/</guid>
      <description>About DSC, Chef, Windows Server, PowerShell, or sysadmin life in general?
I&amp;rsquo;m now scheduling office hours via Ohours! &amp;nbsp;Take a look at my open time slots and lets chat!</description>
    </item>
    
    <item>
      <title>Cooking Up Some Changes</title>
      <link>https://stevenmurawski.com/2014/06/01/cooking-up-some-changes/</link>
      <pubDate>Sun, 01 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/06/01/cooking-up-some-changes/</guid>
      <description>Working at Stack Exchange has been one of the most rewarding experiences of my career. &amp;nbsp;The developers and sysadmins there are top notch and we got to (and they continue to)&amp;nbsp;work on interesting problems and deliver quality solutions. &amp;nbsp;
However, I recently gave my notice at Stack Exchange. &amp;nbsp;I&amp;rsquo;m entering my last two weeks on the job as an Site Reliability Engineer there. &amp;nbsp;
I think the time has come to move on to my next challenge.</description>
    </item>
    
    <item>
      <title>I&#39;m on the Board!</title>
      <link>https://stevenmurawski.com/2014/06/01/im-on-the-board/</link>
      <pubDate>Sun, 01 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/06/01/im-on-the-board/</guid>
      <description>While I didn&amp;rsquo;t win a seat on the LOPSA Board of Directors, there was a vacancy due to a resignation of an existing board member and I was asked to fill that position.&amp;nbsp;
What does this mean for me? &amp;nbsp; I&amp;rsquo;ll be learning more about the operational and strategic efforts of LOPSA.
You&amp;rsquo;ll be hearing more about LOPSA and what LOPSA is doing from me here and on Ops All The Things.</description>
    </item>
    
    <item>
      <title>Ops All The Things Is BACK!</title>
      <link>https://stevenmurawski.com/2014/06/01/ops-all-the-things-is-back/</link>
      <pubDate>Sun, 01 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/06/01/ops-all-the-things-is-back/</guid>
      <description>We had a bit of a lag in getting out shows (mainly blocked on my dread of audio editing).
The fine folks at Chef (site, twitter) have offered to sponsor the podcast and we now have an AWESOME editor - Mandy Moore (The Ruby Rep) and she turns around well edited shows in no time flat.
Look forward to more consistent shows from Chris (cwebber) and myself!
Most recently released -</description>
    </item>
    
    <item>
      <title>Videos from the PowerShell Summit</title>
      <link>https://stevenmurawski.com/2014/06/01/videos-from-the-powershell-summit/</link>
      <pubDate>Sun, 01 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/06/01/videos-from-the-powershell-summit/</guid>
      <description>If you are interested in DSC, I&amp;rsquo;ve posted my videos from the PowerShell Summit. &amp;nbsp;The conference context for the PowerShell Summit assumes a strong background in PowerShell, so I dive right in to DSC related topics.</description>
    </item>
    
    <item>
      <title>LOPSA Board - Candidate Statement</title>
      <link>https://stevenmurawski.com/2014/05/01/lopsa-board-candidate-statement/</link>
      <pubDate>Thu, 01 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/05/01/lopsa-board-candidate-statement/</guid>
      <description>First a bit of background I&amp;rsquo;m Steve Murawski (in case you couldn&amp;rsquo;t tell from the URL ;) ). &amp;nbsp;I&amp;rsquo;m running for one of the open seats on the LOPSA Board. &amp;nbsp;If you haven&amp;rsquo;t heard of LOPSA, stay tuned - more on that in a minute. &amp;nbsp;
I&amp;rsquo;ve led a circuitous route to becoming a sysadmin, but when I first became a sysadmin, LOPSA was there. &amp;nbsp;LOPSA (and the Madison, Wisconsin chapter) were my first human introduction to sysadmins outside the handful that worked in capacities similar to mine.</description>
    </item>
    
    <item>
      <title>More about Stop Automating</title>
      <link>https://stevenmurawski.com/2014/05/01/more-about-stop-automating/</link>
      <pubDate>Thu, 01 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/05/01/more-about-stop-automating/</guid>
      <description>I&amp;rsquo;m currently participating in the Speaker Idol competition and giving a talk about things that we need to consider before jumping into automation.
Some further reading/watching/listening on this topic include:
 Video/Blog -&amp;nbsp;Enterprise DevOps &amp;amp; the Cloud Blog -&amp;nbsp;You’re Doing DevOps Wrong – Automation in the Enterprise Blog -&amp;nbsp;Zero Sum DevOps - Automation as a Collaboration Killer Podcast -&amp;nbsp;Talking DevOps with Gene Kim Podcast -&amp;nbsp;Building the Culture of DevOps with Steven Murawski Podcast -&amp;nbsp;Continuous Delivery by Jez Humble at NDC Podcast -&amp;nbsp;Jez Humble is Still Delivering Software Podcast -&amp;nbsp;DevOps Cafe Episode&amp;nbsp;44 Podcast -&amp;nbsp;The Ship Show | A Year of The Phoenix Project with Gene Kim  </description>
    </item>
    
    <item>
      <title>Don&#39;t Mess With $OFS</title>
      <link>https://stevenmurawski.com/2014/04/01/dont-mess-with-ofs/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/04/01/dont-mess-with-ofs/</guid>
      <description>(What&amp;rsquo;s $OFS?)
I&amp;rsquo;ve spent the two and a half days chasing a bug in my DSC configuration generation. &amp;nbsp;There was an extra &amp;ldquo;;`n&amp;rdquo; getting inserted between each element in the MOF, resulting in invalid configurations.
Turns out I &amp;nbsp;had changed $OFS in my build script where I modify PSModulePath to point to the Tools directory that the build agent clones from source control (which is a temporary path). &amp;nbsp;I never set $OFS back and it bit me later on in the configuration generation.</description>
    </item>
    
    <item>
      <title>Tracing a Specific Section of Code</title>
      <link>https://stevenmurawski.com/2014/04/01/tracing-a-specific-section-of-code/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/04/01/tracing-a-specific-section-of-code/</guid>
      <description>I don&amp;rsquo;t know if you&amp;rsquo;ve had to trace down a problem in a PowerShell script before, but sometimes it&amp;rsquo;s helpful to watch how the code progresses (see what loops run, what gets skipped, etc..). &amp;nbsp;Set-PSDebug&amp;nbsp;-Trace 1 can help you find there.
If you are dealing with large amounts of code, that output can quickly become overwhelming. &amp;nbsp;If you want to narrow down the code you are watching you can use this little trick to conditionally enable tracing&amp;hellip;</description>
    </item>
    
    <item>
      <title>Why DevOps is Not a Person or Team</title>
      <link>https://stevenmurawski.com/2014/04/01/why-devops-is-not-a-person-or-team/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/04/01/why-devops-is-not-a-person-or-team/</guid>
      <description>If there was such a thing as a &amp;ldquo;DevOps&amp;rdquo; or there is a &amp;ldquo;DevOps&amp;rdquo; business unit, the game is already lost.
If a &amp;ldquo;DevOps&amp;rdquo; is a person or job title, that person then belongs to some group or function in the organization.
If there is a &amp;ldquo;DevOps&amp;rdquo; business unit, that is yet another silo to interact with.
So what is &amp;ldquo;DevOps&amp;rdquo;? DevOps is a description of culture and patterns for delivering business value through technology.</description>
    </item>
    
    <item>
      <title>Demo scripts and shell history from PowerShell Fundamentals at Cascadia</title>
      <link>https://stevenmurawski.com/2014/03/01/demo-scripts-and-shell-history-from-powershell-fundamentals-at-cascadia/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/03/01/demo-scripts-and-shell-history-from-powershell-fundamentals-at-cascadia/</guid>
      <description>Thanks to everyone who joined me to dig into the fundamentals of PowerShell at the Cascadia IT Conference.
Here are my demo scripts and shell history.</description>
    </item>
    
    <item>
      <title>Slides From Windows Config Management At Cascadia IT Conference</title>
      <link>https://stevenmurawski.com/2014/03/01/slides-from-windows-config-management-at-cascadia-it-conference/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/03/01/slides-from-windows-config-management-at-cascadia-it-conference/</guid>
      <description>I had a great time talking about Desired State Configuration (DSC) and declarative configuration management at the Cascadia IT Conference.
Here are my slides from that session.</description>
    </item>
    
    <item>
      <title>The Evolution Of The IT Pro / SysAdmin</title>
      <link>https://stevenmurawski.com/2014/03/01/the-evolution-of-the-it-pro-sysadmin/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/03/01/the-evolution-of-the-it-pro-sysadmin/</guid>
      <description>There have recently been several articles on the changing face of the IT admin. &amp;nbsp;One of my favorites has been the article by Don Jones entitled &amp;ldquo;So Long, &amp;lsquo;IT Pro&amp;rsquo;&amp;rdquo;. &amp;nbsp;In it Don references a move being made by GE away from generalized sysadmins to engineers that build and support a product. &amp;nbsp;
Yes, we must code Don shares that one core competencies that&amp;rsquo;ll need to be developed by sysadmins in this changing world is coding.</description>
    </item>
    
    <item>
      <title>What Are You Catching?</title>
      <link>https://stevenmurawski.com/2014/03/01/what-are-you-catching/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/03/01/what-are-you-catching/</guid>
      <description>The try/catch block is a staple of error handling. &amp;nbsp;In PowerShell, one common anti-pattern I see in try/catch blocks is the use of $error[0].
If you are not familiar with $error, it&amp;rsquo;s an automatic variable that contains all the error records from the session. &amp;nbsp;It&amp;rsquo;s a stack, so the last error that occurred is in $error[0].
I&amp;rsquo;ve recently seen some public scripts that use $error[0] in the catch block</description>
    </item>
    
    <item>
      <title>What Should I Do?</title>
      <link>https://stevenmurawski.com/2014/03/01/what-should-i-do/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/03/01/what-should-i-do/</guid>
      <description>I&amp;rsquo;m mulling over a couple of opportunities and I really don&amp;rsquo;t know what&amp;rsquo;s the better value. &amp;nbsp;I&amp;rsquo;d really appreciate your input.
I&amp;rsquo;m debating on which conference to go to..
Should I go to TechEd or DevOpsDays Pittsburgh? At TechEd, I&amp;rsquo;d be able to use &amp;ldquo;hallway track&amp;rdquo; time to sell DevOps concepts and share my journey. &amp;nbsp;I&amp;rsquo;d also be able to see a good number of friends there.
At DevOpsDays Pittsburgh, I&amp;rsquo;d be able to share the DevOps in a Windows environment story, but with a crowd that&amp;rsquo;s mainly *nix focused and already sold on DevOps concepts (sort of preaching to the choir).</description>
    </item>
    
    <item>
      <title>Will You Be Left Behind?</title>
      <link>https://stevenmurawski.com/2014/03/01/will-you-be-left-behind/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/03/01/will-you-be-left-behind/</guid>
      <description>I&amp;rsquo;ve been blogging recently about the professionalism, raising your skill set, treating your work product as production code that should be cared for, and practices for clean PowerShell code.&amp;nbsp;Don Jones has been talking about similar topics as well, though more eloquently than I. &amp;nbsp;
You&amp;rsquo;ll want to check out Don and Jason Helmick&amp;rsquo;s recent PowerScripting Podcast. &amp;nbsp;About an hour and five minutes in, Don starts a rant about professional development that&amp;rsquo;s worth a listen.</description>
    </item>
    
    <item>
      <title>After These Messages</title>
      <link>https://stevenmurawski.com/2014/02/01/after-these-messages/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/after-these-messages/</guid>
      <description>After a fun weekend of DDOS attacks at work, we&amp;rsquo;ve kicked off a flurry of activity to help mitigate the impact for our users.
So, in lieu of a thought-provoking blog post (I&amp;rsquo;ve got more on comments coming..), I&amp;rsquo;m going to share some of my favorite reads.
&amp;lt;div class=&amp;quot;productDetails left&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.com/Release-It-Production-Ready-Pragmatic-Programmers/dp/0978739213%3FSubscriptionId%3D0ENGV10E9K9QDNSJ5C82%26tag%3Dinvestipendin-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0978739213&amp;quot; target=&amp;quot;new&amp;quot; class=&amp;quot;product-title title&amp;quot;&amp;gt;Release It!: Design and Deploy Production-Ready Software (Pragmatic Programmers)&amp;lt;/a&amp;gt; &amp;lt;div class=&amp;quot;product-author author&amp;quot;&amp;gt;By Michael T. Nygard&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;</description>
    </item>
    
    <item>
      <title>Continuous Learning</title>
      <link>https://stevenmurawski.com/2014/02/01/continuous-learning/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/continuous-learning/</guid>
      <description>The Background A few weeks ago, Richard Campbell posted a note on Twitter that he&amp;rsquo;d be talking to Kim Tripp&amp;nbsp;about learning in the technology space for Runas Radio. &amp;nbsp;Richard asked if there were any questions we&amp;rsquo;d like answered, and I replied with a question.
@richcampbell @KimberlyLTripp Whose responsibility is it to find the time for improving skills? Employer or Employee #RunAsRadio &amp;mdash; Steven Murawski (@StevenMurawski) January 28, 2014
 Kim responded via Twitter that afternoon.</description>
    </item>
    
    <item>
      <title>Deep Thoughts by Tom Limoncelli</title>
      <link>https://stevenmurawski.com/2014/02/01/deep-thoughts-by-tom-limoncelli/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/deep-thoughts-by-tom-limoncelli/</guid>
      <description>My co-worker (and sysadmin-crush) Tom Limoncelli (@yesthattom) has been killing it lately with blog posts around automation and skills required for elevating systems administration and operations from just firefighting and keeping the lights on.&amp;nbsp;
If you don&amp;rsquo;t subscribe to his blog, you should. &amp;nbsp;Do it now.. I&amp;rsquo;ll wait.
A few of his recent posts (as well as some older ones) have been on my mind as well. &amp;nbsp;I&amp;rsquo;m sure I&amp;rsquo;ll share my take in the near future, but for now read Tom&amp;rsquo;s posts and take them to heart.</description>
    </item>
    
    <item>
      <title>DevOps Distills To...</title>
      <link>https://stevenmurawski.com/2014/02/01/devops-distills-to/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/devops-distills-to/</guid>
      <description>Professionalism I recently read Clean Coders&amp;nbsp;by Uncle Bob Martin&amp;nbsp;(twitter). &amp;nbsp;
&amp;lt;div class=&amp;quot;productDetails right&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.com/The-Clean-Coder-Professional-Programmers/dp/0137081073%3FSubscriptionId%3D0ENGV10E9K9QDNSJ5C82%26tag%3Dinvestipendin-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0137081073&amp;quot; target=&amp;quot;new&amp;quot; class=&amp;quot;product-title title&amp;quot;&amp;gt;The Clean Coder: A Code of Conduct for Professional Programmers (Robert C. Martin Series)&amp;lt;/a&amp;gt; &amp;lt;div class=&amp;quot;product-author author&amp;quot;&amp;gt;By Robert C. Martin&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;  
That book opens with the concept of professionalism. &amp;nbsp;Many of the concepts outlined in that book tie back to core DevOps principals and why I think DevOps is necessary.</description>
    </item>
    
    <item>
      <title>Feeling &amp;quot;iffy&amp;quot;?</title>
      <link>https://stevenmurawski.com/2014/02/01/feeling-iffy/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/feeling-iffy/</guid>
      <description>The &amp;ldquo;if&amp;rdquo; statement is such a fundamental construct in our programming and scripting experience.
It&amp;rsquo;s not uncommon to see something like&amp;nbsp;

where the code starts to look like arrows pointing to the right. &amp;nbsp;And this isn&amp;rsquo;t the worst thing I&amp;rsquo;ve written!
Stop the madness! This is a great indicator of a problem or somewhere we can clean up our code (also known as a code smell).
We really don&amp;rsquo;t want to get more than one or two levels deep in flow control (I&amp;rsquo;m including switch, while, do/while, foreach, and for loops here), otherwise it can start getting hard to track what is going on.</description>
    </item>
    
    <item>
      <title>Hoarders - Technology Edition</title>
      <link>https://stevenmurawski.com/2014/02/01/hoarders-technology-edition/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/hoarders-technology-edition/</guid>
      <description>Where Information Goes To Die We&amp;rsquo;ve all been in jobs where there is &amp;ldquo;the guy&amp;rdquo; (I should really say &amp;ldquo;the person&amp;rdquo;, but that just doesn&amp;rsquo;t ring as colloquially true) who know how everything works and ties together. &amp;nbsp;Maybe she&amp;rsquo;s been there a while, maybe she&amp;rsquo;s just REALLY smart, but in any case, &amp;nbsp;she is the person who knows how all the pieces tie together. &amp;nbsp;Maybe it&amp;rsquo;s you!
This person is usually a dedicated worker who is very often savvy and held in high regard by his coworkers.</description>
    </item>
    
    <item>
      <title>I&#39;m a Fraud</title>
      <link>https://stevenmurawski.com/2014/02/01/im-a-fraud/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/im-a-fraud/</guid>
      <description>I&amp;rsquo;m not good enough to work here. Why should they listen to me? They are going to realize I don&amp;rsquo;t know what I&amp;rsquo;m doing. Have you ever felt this way?&amp;nbsp; I know I have.&amp;nbsp; These are indicators of imposters syndrome.&amp;nbsp; internalize their accomplishments. Despite external evidence of their competence, those with the syndrome remain convinced that they are frauds and do not deserve the success they have achieved. Proof of success is dismissed as luck, timing, or as a result of deceiving others into thinking they are more intelligent and competent than they believe themselves to be.</description>
    </item>
    
    <item>
      <title>Interested in Desired State Configuration?  Want training?</title>
      <link>https://stevenmurawski.com/2014/02/01/interested-in-desired-state-configuration-want-training/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/interested-in-desired-state-configuration-want-training/</guid>
      <description>I&amp;rsquo;m doing a hands on, full day class on DSC at the Cascadia IT Conference in Seattle on March &amp;nbsp;7th (and on March 8th I&amp;rsquo;ll be teaching a PowerShell Fundamentals half day class and another half day class on Failover Clustering).
Early bird registration ends on February 17th, so sign up now!
What Else Is There? Other training sessions you might find interesting are:
 Team Time Management and Evil Genius 101 by my co-worker Tom Limoncelli Advanced Puppet by Garrett Honeycutt SRE Classroom by Caskey Dickson (an SRE at Google) Programming System Tools With Go by Chris McEniry DNSSEC by Alan Clegg Cisco ASAs by Don Crawley Emergency Operations Drills by Adele Shakal Editing with vi by Aleksey Tsalolikhin  And of course, tons of technical talks including:</description>
    </item>
    
    <item>
      <title>Just Stop With The Comments Already...</title>
      <link>https://stevenmurawski.com/2014/02/01/just-stop-with-the-comments-already/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/just-stop-with-the-comments-already/</guid>
      <description>in your code.
  the only truly good comment is the comment you found a way not to write.
&amp;lt;div class=&amp;quot;productDetails left&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882%3FSubscriptionId%3D0ENGV10E9K9QDNSJ5C82%26tag%3Dinvestipendin-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0132350882&amp;quot; target=&amp;quot;new&amp;quot; class=&amp;quot;product-title title&amp;quot;&amp;gt;Clean Code: A Handbook of Agile Software Craftsmanship&amp;lt;/a&amp;gt; &amp;lt;div class=&amp;quot;product-author author&amp;quot;&amp;gt;By Robert C. Martin&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;  
I&amp;rsquo;m working my way back through Robert Martin (Uncle Bob)&amp;rsquo;s Clean Code and I love his thoughts on code comments. &amp;nbsp;I&amp;rsquo;m going to highlight a few and how I think they apply to PowerShell.</description>
    </item>
    
    <item>
      <title>More About Fewer Comments</title>
      <link>https://stevenmurawski.com/2014/02/01/more-about-fewer-comments/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/more-about-fewer-comments/</guid>
      <description>My last post about comments generated a bit of conversation on Twitter, which highlighted my failure to communicate a few points.
My dislike for comments is predicated on two main concerns. &amp;nbsp;
First, if I find myself needing to leave a comment, I&amp;rsquo;ve accepted the fact that my code isn&amp;rsquo;t clear enough to explain what it is doing. &amp;nbsp;This could indicate a problem in my function or variable naming, or a need to refactor a dense block of code.</description>
    </item>
    
    <item>
      <title>So, I&#39;m Just Lucky...</title>
      <link>https://stevenmurawski.com/2014/02/01/so-im-just-lucky/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/so-im-just-lucky/</guid>
      <description>&amp;hellip; to work at Stack Exchange
&amp;hellip; to be a PowerShell MVP
&amp;hellip; to present at conferences
&amp;hellip; to be a guest on or to host a podcast
&amp;hellip; to get to play with all the newest technologies
It&amp;rsquo;s Not Just Luck! I started in IT in what is both an uncommon path and a familiar tale. &amp;nbsp;It was the old tale of a boy growing up and seeing his first Apple II computer and falling in love with the things.</description>
    </item>
    
    <item>
      <title>SysAdmins Should Program</title>
      <link>https://stevenmurawski.com/2014/02/01/sysadmins-should-program/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/sysadmins-should-program/</guid>
      <description>Yes, I&amp;rsquo;m looking at you Windows Admins!   Come out from behind you GUI! &amp;nbsp;
Keep your hands on the home row! &amp;nbsp;
Slowly! &amp;nbsp;
Slowly!
Now open a command prompt without touching the mouse!
Our ability to click through a UI can only take us so far, as our environments grow and the server to admin ratio becomes much less favorable to the admin.
Scripting is Programming Dictionary.</description>
    </item>
    
    <item>
      <title>Testing Mocked Output with Pester</title>
      <link>https://stevenmurawski.com/2014/02/01/testing-returned-objects-with-pester/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/testing-returned-objects-with-pester/</guid>
      <description>I&amp;rsquo;ve been using Pester recently for unit testing of my scripts. &amp;nbsp;One problem I have in testing some scripts is that it&amp;rsquo;s difficult to test functions that call methods of objects returned.
It&amp;rsquo;s easier to explain with an example.The below script is a function from my PageFile DSC Resource.

In order to test this function, I need to return an object from my Get-WmiObject call and test if the right values were set on the object and that the Put method was called.</description>
    </item>
    
    <item>
      <title>WISSUG Links and Deck</title>
      <link>https://stevenmurawski.com/2014/02/01/wissug-links-and-deck/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/wissug-links-and-deck/</guid>
      <description>Thanks to the Wisconsin SQL Server Users Group for having me out last night. &amp;nbsp;I had a great time talking about SQL Server and PowerShell.
All the links I referenced are available from this bundle&amp;nbsp;and my slide deck is here.</description>
    </item>
    
    <item>
      <title>What Are You Reading?</title>
      <link>https://stevenmurawski.com/2014/02/01/what-are-you-reading/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/what-are-you-reading/</guid>
      <description>What books have you been reading lately? &amp;nbsp;Anything to further your career?
Here are a few that are in my queue..
&amp;lt;div class=&amp;quot;productDetails center&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.com/Antifragile-Things-That-Gain-Disorder-ebook/dp/B0083DJWGO%3FSubscriptionId%3D0ENGV10E9K9QDNSJ5C82%26tag%3Dinvestipendin-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3DB0083DJWGO&amp;quot; target=&amp;quot;new&amp;quot; class=&amp;quot;product-title title&amp;quot;&amp;gt;Antifragile: Things That Gain from Disorder&amp;lt;/a&amp;gt; &amp;lt;div class=&amp;quot;product-author author&amp;quot;&amp;gt;By Nassim Nicholas Taleb&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;  
&amp;lt;div class=&amp;quot;productDetails center&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.com/Advanced-Windows-Debugging-Mario-Hewardt/dp/0321374460%3FSubscriptionId%3D0ENGV10E9K9QDNSJ5C82%26tag%3Dinvestipendin-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0321374460&amp;quot; target=&amp;quot;new&amp;quot; class=&amp;quot;product-title title&amp;quot;&amp;gt;Advanced Windows Debugging&amp;lt;/a&amp;gt; &amp;lt;div class=&amp;quot;product-author author&amp;quot;&amp;gt;By Mario Hewardt, Daniel Pravat&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;  
&amp;lt;div class=&amp;quot;productDetails center&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.com/Beyond-Obvious-Questions-Game-Changing-Innovation/dp/1401324460%3FSubscriptionId%3D0ENGV10E9K9QDNSJ5C82%26tag%3Dinvestipendin-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1401324460&amp;quot; target=&amp;quot;new&amp;quot; class=&amp;quot;product-title title&amp;quot;&amp;gt;Beyond the Obvious: Killer Questions That Spark Game-Changing Innovation&amp;lt;/a&amp;gt; &amp;lt;div class=&amp;quot;product-author author&amp;quot;&amp;gt;By Phil McKinney&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;</description>
    </item>
    
    <item>
      <title>What Developers Think When They Hear &amp;quot;DevOps&amp;quot;</title>
      <link>https://stevenmurawski.com/2014/02/01/what-developers-think-when-they-hear-devops/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/what-developers-think-when-they-hear-devops/</guid>
      <description>They hear:
 Now we&amp;rsquo;re going to be paged for the sysadmins failing infrastructure. No more sysadmins. &amp;nbsp;We&amp;rsquo;ve got to do server configuration. Deploying to the cloud. Only for web sites / web operations.  What they should be hearing:
 Getting to know the operations staff. Identifying features to support operations. Making it easier to get changes into production  DevOps has become quite a loaded term, filled with strong feelings on a number of sides.</description>
    </item>
    
    <item>
      <title>What SysAdmins Think When They Hear &amp;quot;DevOps&amp;quot;</title>
      <link>https://stevenmurawski.com/2014/02/01/what-sysadmins-think-when-they-hear-devops/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/02/01/what-sysadmins-think-when-they-hear-devops/</guid>
      <description>They hear:
 Devs getting root or administrator rights on production machines. No control over application deployment. Moving to &amp;ldquo;the cloud&amp;rdquo;. &amp;ldquo;Shoot from the hip&amp;rdquo; administration - where things are always changing. Configuration management tooling. Automate all the things!   What they should be hearing:
 Getting to know your developers and other business folk. Understanding the whole system, not just your little corner of the world. Sharing ideas internally and externally.</description>
    </item>
    
    <item>
      <title>Are SysAdmins Professionals?</title>
      <link>https://stevenmurawski.com/2014/01/01/are-sysadmins-professionals/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/01/01/are-sysadmins-professionals/</guid>
      <description>If so, I&amp;rsquo;m tired of hearing:
Source control? &amp;nbsp;That&amp;rsquo;s for developers. We write and use scripts. &amp;nbsp;Scripts are source code. &amp;nbsp;We need to manage, version, and distribute our scripts. &amp;nbsp;
Source control offers tooling to help with that. &amp;nbsp;Go learn it.
Programming standards? &amp;nbsp;I don&amp;rsquo;t program, but I only write scripts. Scripting is programming, just with the connotation that it isn&amp;rsquo;t being done by a professional. &amp;nbsp;It&amp;rsquo;s an excuse for lack of error handling and logging.</description>
    </item>
    
    <item>
      <title>It&#39;s Just Temporary...</title>
      <link>https://stevenmurawski.com/2014/01/01/its-just-temporary/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/01/01/its-just-temporary/</guid>
      <description>Vizzini: HE DIDN&amp;rsquo;T FALL? INCONCEIVABLE.
 Inigo Montoya: You keep using that word. I do not think it means what you think it means.
It does not mean what we think it means&amp;hellip; Many of us have seen The Princess Bride&amp;nbsp;and have heard Inigo&amp;rsquo;s response to Vizzini after Vizzini has excessively used the work &amp;ldquo;inconceivable&amp;rdquo;. &amp;nbsp;In the systems administration world, we suffer the same lack of clarity around the word &amp;ldquo;temporary&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>It&#39;s Too Hard...</title>
      <link>https://stevenmurawski.com/2014/01/01/its-too-hard/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/01/01/its-too-hard/</guid>
      <description>Learning XYZ technology is Too Hard&amp;hellip; How many times have we heard that from our friends and/or co-workers?&amp;nbsp; How many times have we uttered it ourselves?
As sysadmins, we do hard stuff all the time.
 Networking is hard. Clustering services is hard. Directory services are hard. Writing scripts is hard.  And on and on.
Get Over It We learn and do hard things all the time.&amp;nbsp; They get easier each time we do them, especially if we do them often.</description>
    </item>
    
    <item>
      <title>Keep It Short</title>
      <link>https://stevenmurawski.com/2014/01/01/keep-it-short/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2014/01/01/keep-it-short/</guid>
      <description>PowerShell is much more readable (and understandable when variables and functions are well named and the scriptblocks are kept short. &amp;nbsp;
If I have to scroll and scroll and scroll to read one script/function, it&amp;rsquo;s much harder to follow. &amp;nbsp;
It&amp;rsquo;s also easier to track down logic errors or a lack of error handling, since you are dealing with much smaller pieces of code.
For example:


vs.</description>
    </item>
    
    <item>
      <title>I&#39;m a Windows Systems Administrator</title>
      <link>https://stevenmurawski.com/2013/12/01/im-a-windows-systems-administrator/</link>
      <pubDate>Sun, 01 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/12/01/im-a-windows-systems-administrator/</guid>
      <description>&amp;hellip; AND IT&amp;rsquo;S OK. I&amp;rsquo;m tired of being pigeon-holed because I mainly manage systems running Windows.&amp;nbsp;
Developers look down on us&amp;hellip; &amp;ldquo;They are just systems administrations.. they don&amp;rsquo;t need Visual Studio (or source control/build server/clean code).&amp;rdquo;
The DevOps community looks down on us&amp;hellip; &amp;ldquo;Oh, why would you want to run Windows? You can&amp;rsquo;t automate that! It&amp;rsquo;s the tinker toy of the server world.&amp;rdquo;
The *nix community looks down on us&amp;hellip; &amp;ldquo;Why would you want to use a system where you can&amp;rsquo;t work with the source code?</description>
    </item>
    
    <item>
      <title>PowerShell Summit Agenda Posted</title>
      <link>https://stevenmurawski.com/2013/11/01/powershell-summit-agenda-posted/</link>
      <pubDate>Fri, 01 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/11/01/powershell-summit-agenda-posted/</guid>
      <description>And I&amp;rsquo;ll be there!
I have three sessions:
 The Live and Times of a DSC Resource Building Scalable Configurations Patterns for Implementing Configuration with a DSC Pull Server  There are a number of other great sessions lined up over three tracks (Practical, Domain, and Developer).&amp;nbsp;I don&amp;rsquo;t know what to attend when I&amp;rsquo;m not speaking.. there are so many great options. &amp;nbsp;
I think there are still spots available for the Summit, so register soon!</description>
    </item>
    
    <item>
      <title>The Phoenix Project At #MVP13</title>
      <link>https://stevenmurawski.com/2013/11/01/the-phoenix-project-at-mvp13/</link>
      <pubDate>Fri, 01 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/11/01/the-phoenix-project-at-mvp13/</guid>
      <description>The Microsoft MVP Summit is coming up again (yes, that&amp;rsquo;s twice this year) and I&amp;rsquo;m getting prepped to head out to Bellevue.
For this trip, I&amp;rsquo;ve got a &amp;ldquo;special offer&amp;rdquo;. &amp;nbsp;I&amp;rsquo;ll be giving away 100 copies of &amp;ldquo;The Phoenix Project&amp;rdquo;, thanks to Kevin Behr, Gene Kim, and George Spafford (the authors of the book).
What is &amp;ldquo;The Phoenix Project&amp;rdquo;? Well, a book review deserves a post of its own (and will get it at some point), but the TL;DR; version is &amp;ldquo;The Phoenix Project&amp;rdquo; chronicles the story of Bill, an IT Operations manager in an enterprise setting, as enters into an unwilling journey to finding the principals of DevOps.</description>
    </item>
    
    <item>
      <title>DSC Series</title>
      <link>https://stevenmurawski.com/2013/10/01/dsc-series/</link>
      <pubDate>Tue, 01 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/10/01/dsc-series/</guid>
      <description>I&amp;rsquo;ve been doing some blogging at PowerShell.org on Desired State Configuration.&amp;nbsp; &amp;nbsp;You can find all my articles here.</description>
    </item>
    
    <item>
      <title>I&#39;m Podcasting Again</title>
      <link>https://stevenmurawski.com/2013/10/01/im-podcasting-again/</link>
      <pubDate>Tue, 01 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/10/01/im-podcasting-again/</guid>
      <description>I&amp;rsquo;m back on the mic with a new podcast, Ops All The Things&amp;nbsp;with Christopher Webber (twitter/blog) on Systems Administration, Operations, and all sorts of other stuff.&amp;nbsp;
We&amp;rsquo;ve got our first episode introducing the show up and are planning for two shows a month. &amp;nbsp;Check it out and let me know what you want to hear about.</description>
    </item>
    
    <item>
      <title>Like SQL Server? Like to Help Others?</title>
      <link>https://stevenmurawski.com/2013/09/01/like-sql-server-like-to-help-others/</link>
      <pubDate>Sun, 01 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/09/01/like-sql-server-like-to-help-others/</guid>
      <description>Kendra Little just posted that Brent Ozar Unlimited is looking for their next employee.
I&amp;rsquo;ve known Brent for a few years now, and have recently met (over the past year and a half or so) Jes and most recently Kendra. &amp;nbsp;They are an exciting, smart group of people who are passionate about learning and sharing (some of the key cultural components of DevOps - even if they are DBA&amp;rsquo;s). &amp;nbsp;If I didn&amp;rsquo;t have one of the best jobs in the world already, I&amp;rsquo;d love to go work with them.</description>
    </item>
    
    <item>
      <title>What&#39;s new at Stack Exchange?</title>
      <link>https://stevenmurawski.com/2013/09/01/whats-new-at-stack-exchange/</link>
      <pubDate>Sun, 01 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/09/01/whats-new-at-stack-exchange/</guid>
      <description>Come Join Us Well, you could be! &amp;nbsp;If you are a developer with the heart of a sysadmin, we are looking for you to join our Site Reliability Engineering team. &amp;nbsp;Ship Show Podcast&amp;nbsp; about how to deal with stressful situations in production. &amp;nbsp;That generated some good discussion on Twitter, as well as a great comment from USENIX LISA this year. &amp;nbsp;I&amp;rsquo;ll be there teaching a couple of PowerShell classes (Evil Genius 101 class.</description>
    </item>
    
    <item>
      <title>&amp;quot;DevOps&amp;quot; Is Going To Make My Head Explode</title>
      <link>https://stevenmurawski.com/2013/04/01/devops-is-going-to-make-my-head-explode/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/04/01/devops-is-going-to-make-my-head-explode/</guid>
      <description>The term &amp;ldquo;DevOps&amp;rdquo; has been floating around for a few years now. &amp;nbsp;It&amp;rsquo;s gone from relative obscurity to being &amp;ldquo;that thing&amp;rdquo; that organizations need to survive and thrive.&amp;nbsp;
What is DevOps? At it&amp;rsquo;s heart, DevOps is about culture and process. &amp;nbsp;The DevOps mindset draws from manufacturing thinkers like Demming and Goldratt, as well as modern day thought leaders like Allspaw and Humble.
The focus of DevOps culturally is to bring IT in line with the business objectives.</description>
    </item>
    
    <item>
      <title>LOPSA-East is This Week</title>
      <link>https://stevenmurawski.com/2013/04/01/lopsa-east-is-this-week/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/04/01/lopsa-east-is-this-week/</guid>
      <description>If you within travel distance to New Brunswick, NJ, there is a great conference (LOPSA-East)&amp;nbsp;occurring&amp;nbsp;on Friday May 3 and Saturday May 4th.
Keynoting the conference will be Marcus Ranum, one of pioneers in the firewall, VPN, and IDS systems.
LOPSA-East features technology specific training covering:
 PowerShell Windows Clustering Puppet Chef CFEngine IPV6 and DNSSEC Working with SSDs  If you are trying to drive technical change (introducing configuration management in your environment for example), check out Tom Limoncelli&amp;rsquo;s Evil Genius 101 class.</description>
    </item>
    
    <item>
      <title>MMS 2013 - Advanced Automation session</title>
      <link>https://stevenmurawski.com/2013/04/01/mms-2013-advanced-automation-session/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/04/01/mms-2013-advanced-automation-session/</guid>
      <description>I had a great time so here they are&amp;hellip;
The Demo While the core of our session focused on the scenarios that PowerShell V3 enables, our principal demo was around configuration management. &amp;nbsp;We started with a running domain controller and a base VHD. &amp;nbsp;From there, we provisioned two web servers with a call to Assert-VM. &amp;nbsp;When the two web servers were ready, we deployed our website with Assert-Website. &amp;nbsp;</description>
    </item>
    
    <item>
      <title>Cascadia IT Conference</title>
      <link>https://stevenmurawski.com/2013/03/01/cascadia-it-conference/</link>
      <pubDate>Fri, 01 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/03/01/cascadia-it-conference/</guid>
      <description>I had the honor of being asked back to the Fundamentals and Toolkit classes, including shell history from the Fundamentals class.
If you are interested taking these classes, I&amp;rsquo;ll be giving them at the upcoming LOPSA-East conference.</description>
    </item>
    
    <item>
      <title>Upcoming Conferences</title>
      <link>https://stevenmurawski.com/2013/02/01/upcoming-conferences/</link>
      <pubDate>Fri, 01 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/02/01/upcoming-conferences/</guid>
      <description>Cascadia IT Conference 
I&amp;rsquo;ll be back at the Cascadia IT Conference (March 15 and 16) for the second year. &amp;nbsp;I&amp;rsquo;ll be teaching a full day of PowerShell (PowerShell Fundamentals in the morning and Building Your PowerShell Toolkit in the afternoon). &amp;nbsp;I&amp;rsquo;m also planning on hanging around for all the technical sessions on Saturday.
If you are in the Seattle area, this is a conference that is worth checking out.</description>
    </item>
    
    <item>
      <title>Good Bye 2012, Hello 2013</title>
      <link>https://stevenmurawski.com/2013/01/01/good-bye-2012-hello-2013/</link>
      <pubDate>Tue, 01 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2013/01/01/good-bye-2012-hello-2013/</guid>
      <description>2012 in Review I started 2012 with a great surprise and the year continued to be one of my busiest.
The year started with my MVP award and spending a lot of time working with Windows 8 Server (before it got its actual product name) and trying to make PowerShell V3 make sense in my hybrid environment. The Greater Milwaukee Script Club and Greater Milwaukee IT Pro User Community both struggled on (Script Club continued thanks to the support of Tim Lemmers at Greenfield PD and the IT pro group due to the efforts of Brian Lewis and Michael Steineke).</description>
    </item>
    
    <item>
      <title>New Beginnings</title>
      <link>https://stevenmurawski.com/2012/12/01/new-beginnings/</link>
      <pubDate>Sat, 01 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/12/01/new-beginnings/</guid>
      <description>Where I was&amp;hellip; Friday was my last day with Edgenet, where I&amp;rsquo;ve worked as a senior sysadmin for the past two years. Edgenet has been a great environmement to work in. The IT team was top notch and we got to work with all sorts of great, bleeding edge tech (we had Windows Server 2012 in production since the Developer Preview). I got to play with large geo clusters and a significant Hyper-V implentation.</description>
    </item>
    
    <item>
      <title>LISA 2012–Now with more PowerShell</title>
      <link>https://stevenmurawski.com/2012/11/01/lisa-2012now-with-more-powershell/</link>
      <pubDate>Thu, 01 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/11/01/lisa-2012now-with-more-powershell/</guid>
      <description>The 2012 LISA (Large Installation System Administration) Conference is coming up (December 9-14).
If you aren’t familiar with LISA, it is a conference focusing on systems administration topics with a rich history (this is the 26th one).&amp;#160; There are 47 different full or half-day classes to choose from, as well as three days of additional technical sessions across three main themes – Cloud Computing, Super Sysadmin, and IPv6 and DNSSEC.</description>
    </item>
    
    <item>
      <title>Server 2012 in 31 Days–Recap</title>
      <link>https://stevenmurawski.com/2012/11/01/server-2012-in-31-daysrecap/</link>
      <pubDate>Thu, 01 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/11/01/server-2012-in-31-daysrecap/</guid>
      <description>My friend Microsoft IT Pro Evangelist Brian Lewis (twitter, blog) contacted me about a series he, Matt Hester, Keith Mayer, and Kevin Remde were going to do through the month of October on their favorite things in Server 2012.&amp;#160;
&amp;#160;
My first thought was that a month was not enough, since Server 2012 is chock full of new goodness.&amp;#160; I watched the series develop and added my own meager contribution on what I think is the killer feature in Server 2012 – SMB3 and Continuously Available File Shares.</description>
    </item>
    
    <item>
      <title>Still Time For Early Bird Registration For LISA 2012</title>
      <link>https://stevenmurawski.com/2012/11/01/still-time-for-early-bird-registration-for-lisa-2012/</link>
      <pubDate>Thu, 01 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/11/01/still-time-for-early-bird-registration-for-lisa-2012/</guid>
      <description>SAVE THE DATE
LISA &amp;lsquo;12: 26th Large Installation System Administration Conference
December 9-14, 2012, San Diego, CA
https://www.usenix.org/lisa12
Early Bird Registration Deadline: November 19, 2012
Sponsored by USENIX in cooperation with LOPSA
LISA is coming to San Diego, CA, December 9-14, 2012. As always, the breadth and quality of this year&amp;rsquo;s tutorials, paper presentations, invited talks, and participants are excellent. Learn more at https://www.usenix.org/lisa12.
New for 2012 are themes, which allow you to follow a specific topic through tutorials, workshops, technical sessions, and the refereed papers track.</description>
    </item>
    
    <item>
      <title>Server 2012–Continuously Available File Shares</title>
      <link>https://stevenmurawski.com/2012/10/01/server-2012continuously-available-file-shares/</link>
      <pubDate>Mon, 01 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/10/01/server-2012continuously-available-file-shares/</guid>
      <description>I think SMB3 and the enhancements to the clustered file share roles are some of the most important new features in Server 2012.
&amp;#160;
There are some great new features in file shares and the SMB protocol.&amp;#160; Some of the terminology can be confusing, so I’m going to loosely define a few of them right up front.
**SMB3 – **Revised SMB protocol with improved performance, scaling, and support for technology like RSS and RDMA.</description>
    </item>
    
    <item>
      <title>Back on RunAs Radio</title>
      <link>https://stevenmurawski.com/2012/06/01/back-on-runas-radio/</link>
      <pubDate>Fri, 01 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/06/01/back-on-runas-radio/</guid>
      <description>Richard Campbell was kind enough to have me back on RunAs Radio to talk about SMB3 and Scale-Out File Shares in Windows Server 2012.&amp;#160; We didn’t really talk about anything PowerShell related, but SMB3 and Scale-Out File Shares are a radical topic and are changing my data center deployments in a very good way.&amp;#160; Richard is a super smart guy and always drives the conversation in interesting directions, bringing out points that might have passed by and offering interesting insights that really make you think.</description>
    </item>
    
    <item>
      <title>Back on the PowerScripting Podcast</title>
      <link>https://stevenmurawski.com/2012/05/01/back-on-the-powerscripting-podcast/</link>
      <pubDate>Tue, 01 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/05/01/back-on-the-powerscripting-podcast/</guid>
      <description>You think Hal and Jonathan would learn, but they keep having me back on the show.
Hal was out of town, but Jon and I had a great talk about Server 2012 and PowerShell V3.&amp;#160; As always, there was great conversation in the chat room and some good questions.&amp;#160; Jon had a surprise for us all.&amp;#160; After the interview, he played Jeffrey Snover’s keynote from the PowerShell Deep Dive.&amp;#160;
Check out this episode and the other great shows and interviews they have.</description>
    </item>
    
    <item>
      <title>PowerShell at PICC</title>
      <link>https://stevenmurawski.com/2012/05/01/powershell-at-picc/</link>
      <pubDate>Tue, 01 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/05/01/powershell-at-picc/</guid>
      <description>I had a great time with my classes at PICC.&amp;#160; Both the PowerShell Fundamentals class and the PowerShell Tips and Tricks class were a lot of fun and resulted in great conversations at the breaks and after the classes.
The fun continued in the evening with the Bird of a Feather sessions where we spent some time talking about Server 2012, Server Core, and remote server management.&amp;#160; What a great time.</description>
    </item>
    
    <item>
      <title>RunAs Radio and PowerShell V3</title>
      <link>https://stevenmurawski.com/2012/05/01/runas-radio-and-powershell-v3/</link>
      <pubDate>Tue, 01 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/05/01/runas-radio-and-powershell-v3/</guid>
      <description>I joined Richard Campbell, the host of Runas Radio to talk about PowerShell V3 and Server 2012.&amp;#160; We had a great conversation and covered some of the improvements and new features in PowerShell V3 and the new cmdlets and support in Server 2012.
What’s RunAs Radio? RunAs Radio is a weekly internet audio talk show for IT professionals focused on Microsoft products.&amp;#160; They cover a full range of topics from a Microsoft-centric view point.</description>
    </item>
    
    <item>
      <title>The Games Are Afoot!</title>
      <link>https://stevenmurawski.com/2012/04/01/the-games-are-afoot/</link>
      <pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/04/01/the-games-are-afoot/</guid>
      <description>The Scripting Games that is! This year’s games are in progress, but it’s not too late to start.&amp;#160; Each weekday a new event is posted, but you have a week to turn in your solution, so get out there and start writing some PowerShell.
All the details you need are available from the Scripting Games All In One Links Page, where the Scripting Guy Ed Wilson has thoughtfully provided (and updates daily) links to the events, rules, and other great information.</description>
    </item>
    
    <item>
      <title>Want to PICC up some new skills?</title>
      <link>https://stevenmurawski.com/2012/04/01/want-to-picc-up-some-new-skills/</link>
      <pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/04/01/want-to-picc-up-some-new-skills/</guid>
      <description>If you are out on the East Coast and want to pick up some new skills or freshen up some old ones, check out PICC – the Professional IT Community Conference.
PICC is hosted in New Brunswick, New Jersey and is two days of great SysAdmin content (May 11&amp;frasl;12).
You’ll find half day training sessions on things like:  PowerShell (by your truly) Puppet Time Management Technical Resume Writing IPv6 Workplace Presentations and more…  There are also conference sessions on topics like:  Ganeti (Virtualization Management Platform) Windows Deployment with MDT 2010 Scaling the StackExchange Platform Configuration Management Securing MySQL Deep Application Monitoring and more…  I’ll be there, and I’m definitely going to walk away better prepared to do my job.</description>
    </item>
    
    <item>
      <title>Cascadia Community Conference - 2012</title>
      <link>https://stevenmurawski.com/2012/03/01/cascadia-community-conference-2012/</link>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/03/01/cascadia-community-conference-2012/</guid>
      <description>I had a great time at the Cascadia conference this past weekend.&amp;#160; I missed Friday, but got to spend all day Saturday teaching PowerShell to a great group of attendees.&amp;#160; There were some great questions and interesting thoughts developed in both the Fundamentals class and the Tips and Tricks class.
I want to thank the organizers of the conference for having me out and especially to the attendees for my classes, most of whom spent all day with me.</description>
    </item>
    
    <item>
      <title>PowerShell V3 – Auto-loading of Modules</title>
      <link>https://stevenmurawski.com/2012/01/01/powershell-v3-auto-loading-of-modules/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/01/01/powershell-v3-auto-loading-of-modules/</guid>
      <description>PowerShell V3 includes a new “feature” – Auto-loading of modules.
What Does It Do? Module discovery has been updated to make the exported commands for modules that are not loaded visible in a PowerShell session.
In Version 2, if you run Get-Module on a module that is not loaded but in your PSModulePath, you’ll get some metadata about the module, but nothing about the ExportedFunctions, ExportedCmdlets, ExportedAliases, or ExportedVariables.&amp;nbsp;</description>
    </item>
    
    <item>
      <title>PowerShell V3 – Default Parameter Values</title>
      <link>https://stevenmurawski.com/2012/01/01/powershell-v3-default-parameter-values/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/01/01/powershell-v3-default-parameter-values/</guid>
      <description>PowerShell Version 3 introduces the concept of Default Parameter Values.
This allows you to specify a value for one or more parameters for one or more commands.
To implement this, you need to populate a new hashtable – $PSDefaultParameterValues
That Description is Not Helpful Let’s look at some examples -
First off, we can specify the value for a parameter for a specific command.&amp;#160; The pattern used for the hashtable entries is “NameOfCommand:NameOfParameter” = “ValueOfParameter”.</description>
    </item>
    
    <item>
      <title>Starting 2012 with a Bang</title>
      <link>https://stevenmurawski.com/2012/01/01/starting-2012-with-a-bang/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/01/01/starting-2012-with-a-bang/</guid>
      <description>I’m so excited for 2012, personally and professionally.&amp;#160; I started the year with a great honor, I was awarded a Microsoft MVP award for PowerShell.
Just a bit of background…&amp;#160; I started in IT in 2006 as the IT guy for a municipal police department.&amp;#160; It was the first such full time position the department had.&amp;#160; I immediately became responsible for a public safety network that needed to be operational 24&amp;frasl;7.</description>
    </item>
    
    <item>
      <title>When Import-Module Does Not</title>
      <link>https://stevenmurawski.com/2012/01/01/when-import-module-does-not/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2012/01/01/when-import-module-does-not/</guid>
      <description>A question came up about the behavior of what’s that?).
So What’s the Question? Does the auto-loading of modules in PowerShell Version 3 use Import-Module behind the scenes?&amp;#160; If it does, can we use default parameter sets to control what types of things are imported?
What Actually Happens? So, it turns out that default parameter set (new feature) can be used to customize the import of new modules.
$PSDefaultParameterValues = @{ &amp;quot;Import-Module:Alias&amp;quot;=@() &amp;quot;Import-Module:Function&amp;quot;=&amp;rsquo;&amp;lsquo; &amp;quot;Import-Module:Cmdlet&amp;quot;=&amp;rsquo;&amp;lsquo; &amp;quot;Import-Module:Variable&amp;quot;=&amp;rsquo;*&amp;rsquo; } Get-Module Get-BitsTransfer Get-Module</description>
    </item>
    
    <item>
      <title>Checking Your Pipes For Leaks</title>
      <link>https://stevenmurawski.com/2011/09/01/checking-your-pipes-for-leaks/</link>
      <pubDate>Thu, 01 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/09/01/checking-your-pipes-for-leaks/</guid>
      <description>(NOTE: I started this post a few weeks ago)
This morning I woke up with my kitchen floor covered in water.&amp;#160; As I was cleaning it up, I couldn&amp;rsquo;t help drawing some parallels between fixing a leaky pipe and a &amp;quot;leaky&amp;quot; (non-performing) script.
My repair process this morning took the following steps:
 Contain the leak Locate the source of the leak Stop the leak Check for related damage Mitigate the related damage Patch the leak&amp;#160; Confirm the leak is fixed Monitor the leak site  Since most of you won&amp;rsquo;t really care about the plumbing in my kitchen, let&amp;rsquo;s run through how dealing with this problem applies to troubleshooting a misbehaving script (or function).</description>
    </item>
    
    <item>
      <title>Resources for the WI .NET User Group</title>
      <link>https://stevenmurawski.com/2011/09/01/resources-for-the-wi-net-user-group/</link>
      <pubDate>Thu, 01 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/09/01/resources-for-the-wi-net-user-group/</guid>
      <description>I&amp;rsquo;ll get the slides posted sometime (in the middle of migrating my machine to the developer preview of Win 8), but the links I mentioned are:
—Project Home - http://www.show-ui.com
—CodeplexSite - http://showui.codeplex.com
—Doug Finke’s Blog - http://dougfinke.com/blog
—Joel “Jaykul” Bennet’sBlog - http://huddledmasses.org
—James Brundage’sBlog - http://blog.start-automating.com/</description>
    </item>
    
    <item>
      <title>Where I’ll be this Fall</title>
      <link>https://stevenmurawski.com/2011/09/01/where-ill-be-this-fall/</link>
      <pubDate>Thu, 01 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/09/01/where-ill-be-this-fall/</guid>
      <description>I wish I could have make it out to Build or the PowerShell Deep Dive, but I’ll settle for these:
 September 13th – Wisconsin .NET User Group – Talking about Scriptable UI with PowerShell and ShowUI September 29th – Greater Milwaukee IT Pro User Group – Talking about the PsTools in the Sysinternals Suite October 1st – SQL Saturday #98 (Iowa City, IA) – Talking about Scriptable UI with PowerShell and ShowUI November 1st – LaCrosse IT Pro User Group – Going over an Introduction to PowerShell  </description>
    </item>
    
    <item>
      <title>Announcing CommandAssist</title>
      <link>https://stevenmurawski.com/2011/08/01/announcing-commandassist/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/08/01/announcing-commandassist/</guid>
      <description>CommandAssist is a new module designed to provide some graphical help for people who are new to PowerShell or just not as comfortable on the command line.&amp;#160; CommandAssist relies on ShowUI, so go get it now!
What’s There Now The first three functions in this module are:
 Show-ParameterAssist New-AssistedModule Where-Object (with an updated –Assist parameter)  Show-ParameterAssist is the workhorse behind the coolest feature in this module.&amp;#160; Parameter assist takes a command (either a CommandInfo from Get-Command, or a command name and what type of command) and optionally a hashtable of parameters and values.</description>
    </item>
    
    <item>
      <title>Creating an Assisted Module with CommandAssist</title>
      <link>https://stevenmurawski.com/2011/08/01/creating-an-assisted-module-with-commandassist/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/08/01/creating-an-assisted-module-with-commandassist/</guid>
      <description>The CommandAssist module allows you to easily create proxies functions for every command in a module (or snapin).&amp;#160;&amp;#160;
There is a handy command to generate these proxy modules included with the CommandAssist module.&amp;#160;

Building an Assisted Module The easiest way to explain what happens is to walk through the usage of New-AssistedModule.&amp;#160; To that end, we&amp;rsquo;ll create a proxy of a module that I&amp;rsquo;ve been use regularly - the ActiveDirectory module.</description>
    </item>
    
    <item>
      <title>Gotta Love Dilbert</title>
      <link>https://stevenmurawski.com/2011/08/01/gotta-love-dilbert/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/08/01/gotta-love-dilbert/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Using -Assist in an Assisted Module - CommandAssist</title>
      <link>https://stevenmurawski.com/2011/08/01/using-assist-in-an-assisted-module-commandassist/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/08/01/using-assist-in-an-assisted-module-commandassist/</guid>
      <description>This is the the meat of CommandAssist module, providing a contextual assistant to supplying the right parameters to a command.
Getting to the Meat of It In the last post, we created a proxy module for ActiveDirectory module, so what does that really get for us?
Starting off in a new shell, I&amp;rsquo;ve imported the AssistedAD module and I&amp;rsquo;m going to try out the -Assist parameter for Get-ADUser
Import-Module ADAssistGet-ADUser -Assist</description>
    </item>
    
    <item>
      <title>Using CommandAssist - Assisted Where-Object</title>
      <link>https://stevenmurawski.com/2011/08/01/using-commandassist-assisted-where-object/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/08/01/using-commandassist-assisted-where-object/</guid>
      <description>To use CommandAssist, the first step you will need to take is to have ShowUI (at least 1.1) installed and run PowerShell in STA mode.
Then, you can import CommandAssist.&amp;#160; After importing CommandAssist, you can take advantage of the scriptblock builder built in to Where-Object
Get-ChildItem | Where-Object -assist
When you hit enter, you will see a screen like the below.

At the top of the screen is a count of the number of objects coming into Where-Object.</description>
    </item>
    
    <item>
      <title>Waiter, There&#39;s a Bug in My Get-Help!</title>
      <link>https://stevenmurawski.com/2011/08/01/waiter-theres-a-bug-in-my-get-help/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/08/01/waiter-theres-a-bug-in-my-get-help/</guid>
      <description>My friend Robert Robelo was kind enough to point out a problem with the proxies created by the CommandAssist module.
In trying to research the problem, I found that PowerShell crashed ( yes, crashed.. not throwing an error, but CRASHED) when Get-Help could not resolve the command it needed to provide help for.
Setting the Stage Reproducing the Problem Create a module that exports a function
$Path = &#39;c:\users\smurawski\documents\windowspowershell\TestModule.psm1&#39; $null = new-item $Path -ItemType File -Force -Value @&#39; function Test-One { [CmdletBinding()] param($x) $x } Export-ModuleMember -Function Test-One &#39;@  Import the module</description>
    </item>
    
    <item>
      <title>I’m on TechNet Radio!</title>
      <link>https://stevenmurawski.com/2011/07/01/im-on-technet-radio/</link>
      <pubDate>Fri, 01 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/07/01/im-on-technet-radio/</guid>
      <description>A little while back, I had an opportunity to talk with John Weston on TechNet Radio’s Community Corner.
We talked a bit about PowerShell and the community around it, as well as my local Script Club.
&amp;#160;

&amp;#160;
Thanks to John and Chris for taking the time to talk with me, and don’t forget to check out the other great segments in the Community Corner and see what is happening in other user groups!</description>
    </item>
    
    <item>
      <title>Back to Basics - Variable Names</title>
      <link>https://stevenmurawski.com/2011/05/01/back-to-basics-variable-names/</link>
      <pubDate>Sun, 01 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/05/01/back-to-basics-variable-names/</guid>
      <description>$x and $z and $foo just aren&amp;rsquo;t going to cut it in your production scripts.&amp;#160;
Andy Schneider tweeted during the Scripting Games that there was no penalty for providing a descriptive variable name.&amp;#160; He was right and not quite right enough.&amp;#160; Twitter does not provide you the opportunity to share more than a sound bite in one tweet, so he really could not have commented much further there, but he did in a post that expanded on what judges were looking for in style for the Scripting Games.</description>
    </item>
    
    <item>
      <title>Parameter Validation</title>
      <link>https://stevenmurawski.com/2011/05/01/parameter-validation/</link>
      <pubDate>Sun, 01 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/05/01/parameter-validation/</guid>
      <description>Glenn Sizemore wrote a great Scripting Games wrap up post about some of the parameter validation options that are available.&amp;#160; Go read it, I&amp;rsquo;ll wait.
The Smackdown - Ensuring You Have A Value Very often you need to make sure that a parameter will not have a null value.&amp;#160; There are a couple of options in making sure you have valid content.
ValidateNotNull vs. ValidateNotNullOrEmpty When you start to look at some of the validation parameters (in about_Advanced_Functions), the two that leap out are the ValidateNotNull and ValidateNotNullOrEmpty.</description>
    </item>
    
    <item>
      <title>Working the Pipeline</title>
      <link>https://stevenmurawski.com/2011/05/01/working-the-pipeline/</link>
      <pubDate>Sun, 01 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/05/01/working-the-pipeline/</guid>
      <description>The pipeline is a central concept in PowerShell.&amp;#160; It enables you to chain the output from one command to the input of the next, making automation much smoother.&amp;#160; Making your scripts and functions play nicely with the pipeline can mean really impact the ease of use and adaptability of your functions.
Finding the Value In scripts and advanced functions, declaring a parameter whose value can come from the pipeline is pretty straightforward.</description>
    </item>
    
    <item>
      <title>Back to Basics–Parameters</title>
      <link>https://stevenmurawski.com/2011/04/01/back-to-basicsparameters/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/back-to-basicsparameters/</guid>
      <description>My previous posts about the Scripting Games had many references to how parameters were used in scripts and functions.&amp;#160; Since those posts, I’ve had several requests to expand on that, so here we go…
In the Beginning… In PowerShell V1, when we wrote scripts or functions, we had two main ways to retrieve parameters.
The Dark Ages First off, we could parse $Args.
function Do-Something () { $FirstArgument = $args[0] $SecondArgument = $args[1]</description>
    </item>
    
    <item>
      <title>Better Living Through Splatting</title>
      <link>https://stevenmurawski.com/2011/04/01/better-living-through-splatting/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/better-living-through-splatting/</guid>
      <description>One pattern I&amp;rsquo;ve noticed, especially when dealing with commands that may or may not be executed locally is where a script offers a parameter for the computer name (or a list of computer names).
What Are People Doing? Sometimes, that parameter will be defaulted to $env:ComputerName
[Parameter(Mandatory=$false, Position=1, ValueFromPipeline=$true)][string] $ComputerName = $env:ComputerName
Other times, there will be an if statement checking to see if the parameter is null and assigning $env:ComputerName if it has no other value.</description>
    </item>
    
    <item>
      <title>Caught in a Trap - Dealing with Errors</title>
      <link>https://stevenmurawski.com/2011/04/01/caught-in-a-trap-dealing-with-errors/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/caught-in-a-trap-dealing-with-errors/</guid>
      <description>Errors occur.&amp;#160; Things fail.&amp;#160; As an author of a script, you need to be able to deal with these hiccups.
What Do I Need To Watch For? PowerShell has different types of errors (I explain some of that here.)&amp;#160; Terminating errors can ruin a script&amp;rsquo;s day.&amp;#160; Say you are trying to gather information or update settings to a large number of servers.&amp;#160; What happens when you hit an error on server number three, or number 33, or number 333?</description>
    </item>
    
    <item>
      <title>Checking Out The Environment</title>
      <link>https://stevenmurawski.com/2011/04/01/checking-out-the-environment/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/checking-out-the-environment/</guid>
      <description>If you&amp;rsquo;ve worked with cmd.exe or other shell environments, you might be familiar with environmental variables.
PowerShell exposes these variables in two different ways. (Actually it&amp;rsquo;s the same way, but don&amp;rsquo;t tell anyone..)
So, Spit It Out Already.. First, I can access environmental variables through the provider.
dir env:&amp;lt;/pre&amp;gt;
All my standard commands in navigating and retrieving items from a provider (Get-Item, Set-Item, New-Item, etc..) work in interacting with these variables.</description>
    </item>
    
    <item>
      <title>Clean Up Your Parameters</title>
      <link>https://stevenmurawski.com/2011/04/01/clean-up-your-parameters/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/clean-up-your-parameters/</guid>
      <description>Another tidbit to come from the scripts I&amp;rsquo;ve been reviewing is how messy commands with tons of parameters can be.&amp;#160; You end up with really long lines, uneven lines, and/or lots of backticks.
But What Can We Do? But there are commands that require many parameters or long parameters.&amp;#160; We can only stuff so much in variables, and if we name them clearly, they tend to be longer too.&amp;#160; So how can we deal with this?</description>
    </item>
    
    <item>
      <title>Convert Your Comments to Help</title>
      <link>https://stevenmurawski.com/2011/04/01/convert-your-comments-to-help/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/convert-your-comments-to-help/</guid>
      <description>Version 2 of PowerShell introduced structured help in their work, without having to write MAML help files.
Why Not Write My Own Help Function? One of the things I saw a good bit of in the Scripting Games this year was that people wrote their own help functions.&amp;#160;
The usual pattern included if the script was run with a particular switch or no switch, like My-Script.ps1 –help, a little help text would be spewed out.</description>
    </item>
    
    <item>
      <title>Get in the Games!</title>
      <link>https://stevenmurawski.com/2011/04/01/get-in-the-games/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/get-in-the-games/</guid>
      <description>This year’s Scripting Games is well underway, but there is still time to get involved.
You can submit entries for 7 days after an event was released, so there is still time to participate.&amp;#160;
Definitely Fun, Not all Games… If you think that the games are just that, think again.&amp;#160; If you are just getting in to PowerShell, the events cover many practical applications.
Beginner Event 1 Identifying Private Builds – Stresses finding information about running processes or executables.</description>
    </item>
    
    <item>
      <title>Looking for Help?</title>
      <link>https://stevenmurawski.com/2011/04/01/looking-for-help/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/looking-for-help/</guid>
      <description>PowerShell contains a vast array of content in it&amp;rsquo;s help files.&amp;#160; The help files are exposed by the Get-Help cmdlet.&amp;#160; So, what&amp;rsquo;s really under the covers in the help system?
Finding Help by Keyword PowerShell has a growing surface of things that it can cover.&amp;#160; WMI, COM, .NET, Exchange, Active Directory, SharePoint, and on and on.&amp;#160; How are we ever supposed to find the commands and information we need to use PowerShell effectively.</description>
    </item>
    
    <item>
      <title>Output Options–Use Objects!</title>
      <link>https://stevenmurawski.com/2011/04/01/output-optionsuse-objects/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/output-optionsuse-objects/</guid>
      <description>One area that many people get hung up on in creating a PowerShell script is in the output area. (I’ve been guilty of this too, but I’m trying..)
One Tool to Rule Them All PowerShell embraces the &amp;ldquo;many small tools composed together to create solutions” style of automation, rather than the monolithic “one tool to rule them all (and the command line switches to prove it..)”
What this means is that your script does not have to contain every single export option imagined.</description>
    </item>
    
    <item>
      <title>Round up</title>
      <link>https://stevenmurawski.com/2011/04/01/round-up/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/round-up/</guid>
      <description>Just some odds and ends from the week -
 Blog post and script from James Brundage on converting scripts, functions, or cmdlets into executables. The Scripting Games are underway. My session on Building a Management API with PowerShell for the Chicago Code Camp was accepted. Andy Schneider had a great post about modules. Jeff Hicks helps us clear aliases from our scripts (in the ISE). Doug Finke shows us how to use Excel math functions in PowerShell.</description>
    </item>
    
    <item>
      <title>Scripting Games Beginner Events Survey</title>
      <link>https://stevenmurawski.com/2011/04/01/scripting-games-beginner-events-survey/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/scripting-games-beginner-events-survey/</guid>
      <description>[SURVEYS 1]</description>
    </item>
    
    <item>
      <title>The Myth of Advanced Functions–CmdletBinding for the Rest of our Scripts</title>
      <link>https://stevenmurawski.com/2011/04/01/the-myth-of-advanced-functionscmdletbinding-for-the-rest-of-our-scripts/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/the-myth-of-advanced-functionscmdletbinding-for-the-rest-of-our-scripts/</guid>
      <description>It’s been killing me to see scripts that are written like V1 functions and having these wonderfully written V2 style advanced functions contained inside of them.
I would like to share a secret about the CmdletBinding, Parameter attribution, and the rest of the capabilities of Advanced Functions.
These features are not just for Functions!
Those Things That Keep Us Apart, Bring Us Together There are a couple of key differences between functions and scripts.</description>
    </item>
    
    <item>
      <title>Using Pipeline Input</title>
      <link>https://stevenmurawski.com/2011/04/01/using-pipeline-input/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/using-pipeline-input/</guid>
      <description>In judging the Scripting Games, I&amp;rsquo;ve found a good number of scripts that are trying to use the Parameter attribute to take pipeline input, but there are several key mistakes.
Why Doesn&amp;rsquo;t This Work? The Problem When you specify a parameter as taking a value from the pipeline, that parameter name is the variable name that you refer to below.&amp;#160;
function Write-SampleData (){ param( [Parameter(ValueFromPipeline=$true,Position=0)] [string] $SampleData )
Write-Host $SampleData  } &amp;lsquo;TestData&amp;rsquo;, &amp;lsquo;TestData2&amp;rsquo;, &amp;lsquo;TestData3&amp;rsquo; | Write-SampleData</description>
    </item>
    
    <item>
      <title>Where to Filter</title>
      <link>https://stevenmurawski.com/2011/04/01/where-to-filter/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/where-to-filter/</guid>
      <description>Where-Object Rocks! PowerShell has some great filtering capabilities.&amp;#160; Where-Object is extremely versatile, allowing you to filter on any logic you can come up with.
I Feel a &amp;quot;But&amp;quot; Coming Up However, many cmdlets, functions, or scripts have some built in filtering capabilities.&amp;#160; These are often optimized for the command, and if the command supports remote connections, often the filtering can happen on the remote host.&amp;#160; Where-Object is the least common denominator in filtering.</description>
    </item>
    
    <item>
      <title>Write-Host Does Just (and Only) That</title>
      <link>https://stevenmurawski.com/2011/04/01/write-host-does-just-and-only-that/</link>
      <pubDate>Fri, 01 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/04/01/write-host-does-just-and-only-that/</guid>
      <description>I&amp;rsquo;ve seen a number of scripts that are using Write-Host to display output from their scripts.
For example:
Write-Host &amp;quot;SomeValue = $MyValue&amp;quot;
## So What? I&#39;ll tell you what.. If I want to do anything with that output other than look at it in the console (or perhaps a shell transcript), it gets me nothing.&amp;amp;#160; [I&#39;m not going to rehash why our scripts should return objects rather than text, as I covered that in a previous post](/blog/2011/04/output-optionsuse-objects).</description>
    </item>
    
    <item>
      <title>Connect to External Domain with the Active Directory Provider</title>
      <link>https://stevenmurawski.com/2011/03/01/connect-to-external-domain-with-the-active-directory-provider/</link>
      <pubDate>Tue, 01 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/03/01/connect-to-external-domain-with-the-active-directory-provider/</guid>
      <description>When you import the Active Directory module (either on Server 2008 R2 or Windows 7 with the RSAT), a provider is added to your environment and connects to your current domain.
You can also use the provider to connect to other servers and other domains, as well as connect with alternate credentials (which is very useful as I’ve decided to live as a regular user and elevate to a domain admin account when needed).</description>
    </item>
    
    <item>
      <title>Time to Start Ramping Up for the Scripting Games</title>
      <link>https://stevenmurawski.com/2011/03/01/time-to-start-ramping-up-for-the-scripting-games/</link>
      <pubDate>Tue, 01 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/03/01/time-to-start-ramping-up-for-the-scripting-games/</guid>
      <description>The 2011 Scripting Games are fast approaching (April 4th through the 15th)..
If you’ve been holding off on learning a bit a PowerShell, now is the time to step up and try some of these events.&amp;#160; Ed Wilson put together a study guide to help prepare you for some of the skills and techniques you will exercise.
If you have participated before, this year promises to be as fun and exciting, if not more so.</description>
    </item>
    
    <item>
      <title>PowerShell Deep Dive–Last Call for Early Registration</title>
      <link>https://stevenmurawski.com/2011/02/01/powershell-deep-divelast-call-for-early-registration/</link>
      <pubDate>Tue, 01 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/02/01/powershell-deep-divelast-call-for-early-registration/</guid>
      <description>The first ever PowerShell Deep Dive conference is coming up in April (18-19).&amp;#160; I&amp;rsquo;m thrilled to be going.&amp;#160; Early registration for the conference ends on 2&amp;frasl;28 (just a day away), so save yourself $150 and register today!
You can find more details about the structure of the event and a pre-conference workshop by Don Jones (to make sure you are up to speed for the Deep Dive) here.</description>
    </item>
    
    <item>
      <title>PowerShell Modules for the SysAdmin</title>
      <link>https://stevenmurawski.com/2011/02/01/powershell-modules-for-the-sysadmin/</link>
      <pubDate>Tue, 01 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/02/01/powershell-modules-for-the-sysadmin/</guid>
      <description>Now that I’m back working as a SysAdmin, I’ve come to live in Powershell (even more than I was already)&amp;hellip; I regularly have 4 or more console windows open at any one time, plus the ISE.
There are several modules that just make my work much more accessible from the command prompt rather than digging into a GUI or RDP’ing to a server.
ActiveDirectory – The Active Directory module included with the Win7 RSAT or the RSAT on Server 2008 R2</description>
    </item>
    
    <item>
      <title>Setting Application Compatibility Flags</title>
      <link>https://stevenmurawski.com/2011/02/01/setting-application-compatibility-flags/</link>
      <pubDate>Tue, 01 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/02/01/setting-application-compatibility-flags/</guid>
      <description>There was a post on the PowerShell Facebook group today asking how to set the “Run As Administrator” checkbox on the Compatibility tab of the properties for an application.
The compatibility settings are just registry entries, either under the user’s account or under the local machine.
(You can find them under HKCU:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers or
HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers)
Compatibility settings reference the path of the executable as the value and store the app compat flags in the data for the registry key.</description>
    </item>
    
    <item>
      <title>Spring 2011</title>
      <link>https://stevenmurawski.com/2011/02/01/spring-2011/</link>
      <pubDate>Tue, 01 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/02/01/spring-2011/</guid>
      <description>Spring 2011 is shaping up to be a busy time…
March 9th – I’ll be at the Black Hole .NET User Group (in Marshfield, WI) for an Introductory PowerShell For Developers Presentation.
March 26th – I’m going to SQL Saturday in Chicago.&amp;#160; I’ve submitted a couple of sessions (PowerShell Basics and Intermediate PowerShell), so I should know if one get’s accepted towards the end of this month.&amp;#160; Regardless, I’m planning on attending.</description>
    </item>
    
    <item>
      <title>TechMentor Approaching Fast!</title>
      <link>https://stevenmurawski.com/2011/02/01/techmentor-approaching-fast/</link>
      <pubDate>Tue, 01 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2011/02/01/techmentor-approaching-fast/</guid>
      <description>You&amp;rsquo;re not too late for TechMentor Orlando, March 14 - 18, 2011 at Disney&amp;rsquo;s Yacht Club.
TechMentor is offering Use PowerShell readers the best discount so far - $400 discount off the 5 Day Best Value Conference Pass (discount applies to the Standard rate and new registrations only)! Register at http://bit.ly/TMReg with the code UGTM10 for the discount.
If you&amp;rsquo;ve never attended it, TechMentor is 5 intensive and informative days of immediately-applicable training on today&amp;rsquo;s critical IT topics - everything from Active Directory to Virtualization - with a specific track and several sessions on PowerShell.</description>
    </item>
    
    <item>
      <title>Lake County .NET Users Group–Slide Deck and Samples</title>
      <link>https://stevenmurawski.com/2010/11/01/lake-county-net-users-groupslide-deck-and-samples/</link>
      <pubDate>Mon, 01 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/11/01/lake-county-net-users-groupslide-deck-and-samples/</guid>
      <description>Scott Seely and Tim Stall invited me to give an introduction to PowerShell talk for the Lake County .NET Users Group yesterday evening.
We had a great turnout and a number of good questions.&amp;#160; Thank you to everyone who gave up part of their evening to come and learn a bit about the .NET command shell goodness that is PowerShell.&amp;#160;
I’ve uploaded the slide deck, sample scripts, and sample Visual Studio solution here.</description>
    </item>
    
    <item>
      <title>New IT Pro User Group In Milwaukee</title>
      <link>https://stevenmurawski.com/2010/09/01/new-it-pro-user-group-in-milwaukee/</link>
      <pubDate>Wed, 01 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/09/01/new-it-pro-user-group-in-milwaukee/</guid>
      <description>Come Join the Greater Milwaukee Information Technology Professional User Community (GMITPUC). We will be having our first meeting will be September 29, 2010 @ the Waukesha, Microsoft office, N19 W24133 Riverwood Drive, Suite 150, Waukesha, WI 53188 Starting at 6:00 PM
The presentation for the evening will be presented by Brian Lewis an IT Pro Evangelist from Microsoft Corporation. He will be covering Windows 7 and Office 2010 Deployment. Here is the agenda: · How to upgrade from XP to Widows 7</description>
    </item>
    
    <item>
      <title>Adding Configuration To Remoting</title>
      <link>https://stevenmurawski.com/2010/07/01/adding-configuration-to-remoting/</link>
      <pubDate>Thu, 01 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/07/01/adding-configuration-to-remoting/</guid>
      <description>This is a pretty brief post that will need some further elaboration, but Twitter doesn’t provide the best mechanism for longer examples.
There are two places where you can configure your remote sessions..
1) On the remote server – which is covered in a number of places and probably the most discoverable place to put configuration information..&amp;#160; See the help for about_Session_Configurations.
2) Locally, when you start the PSSession.&amp;#160; This is where we will dig deeper.</description>
    </item>
    
    <item>
      <title>April Script Club – Special Guest</title>
      <link>https://stevenmurawski.com/2010/04/01/april-script-club-special-guest/</link>
      <pubDate>Thu, 01 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/04/01/april-script-club-special-guest/</guid>
      <description>The Greater Milwaukee Script Club will be meeting on April 20th and we will have a special guest – James Brundage (twitter | blog | blog).&amp;#160; James is a member of the PowerShell team at Microsoft, as well as a blogger, community member, guest on the PowerScripting Podcast, and author of the PowerShellPack – part of the Windows Resource Kit.
Last month, we used the Admin Development Model to solve a particular problem one of our brave volunteers was trying to deal with in his environment.</description>
    </item>
    
    <item>
      <title>Chicago Code Camp – May 1</title>
      <link>https://stevenmurawski.com/2010/04/01/chicago-code-camp-may-1/</link>
      <pubDate>Thu, 01 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/04/01/chicago-code-camp-may-1/</guid>
      <description>The Chicago Code Camp is being held on Saturday, May 1st.&amp;#160; I’ll be presenting a PowerShell Deep Dive.&amp;#160; If you are in the Chicago area and want to get down into the guts of the PowerShell language and runtime (or many other great sessions!), come on out.&amp;#160; There were 100 97 tickets available last time I checked…</description>
    </item>
    
    <item>
      <title>Deep Fried PowerShell</title>
      <link>https://stevenmurawski.com/2010/02/01/deep-fried-powershell/</link>
      <pubDate>Mon, 01 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/02/01/deep-fried-powershell/</guid>
      <description>Back in August, I was offered a chance to make a fool of myself on yet another podcast tremendously honored by the opportunity to talk with Keith Elder and Chris “Woody” Woodruff on their podcast – Deep Fried Bytes – about PowerShell.
Keith and Chris are great guys, very sharp, and asked some good questions.&amp;#160; If you pop over to take a listen to my appearance, make sure to go back and take a look through their archives.</description>
    </item>
    
    <item>
      <title>Wisconsin Virtual SQL Server Lunch and Learn</title>
      <link>https://stevenmurawski.com/2010/02/01/wisconsin-virtual-sql-server-lunch-and-learn/</link>
      <pubDate>Mon, 01 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/02/01/wisconsin-virtual-sql-server-lunch-and-learn/</guid>
      <description>I just finished taking up 13 people’s lunch hour to talk a bit about PowerShell V2, SQL Server, and the admin development model.
I want to thank John Allman and the Wisconsin SQL Server User Group for allowing me the time to share a bit about PowerShell.&amp;#160; I believe John will be posting the recording for those who are interested.
My slide deck is available here.&amp;#160; The slides aren’t worth much, but the resources on the last two are where the real meat is.</description>
    </item>
    
    <item>
      <title>Greater Milwaukee Script Club – Take 2</title>
      <link>https://stevenmurawski.com/2010/01/01/greater-milwaukee-script-club-take-2/</link>
      <pubDate>Fri, 01 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/01/01/greater-milwaukee-script-club-take-2/</guid>
      <description>We had a pretty good turnout for the first Greater Milwaukee Script Club and a lot of interest in keeping it going, so I’ve set up a home page for the group on Joel “Jaykul” Bennet’s PowerShellGroup.Org site, which serves as a portal page for PowerShell user groups.
Rod Gabriel (who heads up our local VMWare User Group) has an excellent review of the event.&amp;#160; He covers why he considered attending (including why learning PowerShell was becoming a priority for him), as well as the event itself.</description>
    </item>
    
    <item>
      <title>I&#39;ll be on the PowerScripting Podcast!</title>
      <link>https://stevenmurawski.com/2010/01/01/ill-be-on-the-powerscripting-podcast/</link>
      <pubDate>Fri, 01 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/01/01/ill-be-on-the-powerscripting-podcast/</guid>
      <description>I&amp;rsquo;ll be on the PowerScripting podcast with Jonathan Walz and Hal Rottenberg for this week&amp;rsquo;s live stream. We&amp;rsquo;ll be talking about PowerShellCommunity.Org, the Sync Framework, and more&amp;hellip;
I love that podcast and am really looking forward to it! Also, they recently posted an interview with Clint Huffman, who is the author of PAL. Good stuff!</description>
    </item>
    
    <item>
      <title>Script Injection with Set-PSBreakpoint</title>
      <link>https://stevenmurawski.com/2010/01/01/script-injection-with-set-psbreakpoint/</link>
      <pubDate>Fri, 01 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2010/01/01/script-injection-with-set-psbreakpoint/</guid>
      <description>I’ve used the integrated debugging features with PowerShell V2 since I’ve had it available, but I never really dug below the surface of setting breakpoints at certain lines.
Set-PSBreakpoint offers some additional options of which I was not aware.
 Setting a breakpoint in relation to a variable (read, assigned, or both) Setting a breakpoint when a function or command is called Setting a breakpoint based on the column number for the referenced line Run a scriptblock when a breakpoint is hit Breakpoints do not need to be set on a script  Let’s dig into these in a bit more detail:</description>
    </item>
    
    <item>
      <title>Script Club – Coming to the Greater Milwaukee Area</title>
      <link>https://stevenmurawski.com/2009/12/01/script-club-coming-to-the-greater-milwaukee-area/</link>
      <pubDate>Tue, 01 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/12/01/script-club-coming-to-the-greater-milwaukee-area/</guid>
      <description>Register here. About PowerShell Script Club  You Always Talk About Script club 2. You Always Talk About Script Club 3. If Someone asks for Help, And You Can Help, You Help 4. Two People Help One Person at One Time 5. One Module Per Person Per Night 6. All Scripts, All PowerShell 7. Scripts will be as short as they can be 8. If This is your First time at Script Club, You Have to Script  The first Greater Milwaukee PowerShell Script Club is being formed.</description>
    </item>
    
    <item>
      <title>All Sorts of New</title>
      <link>https://stevenmurawski.com/2009/11/01/all-sorts-of-new/</link>
      <pubDate>Sun, 01 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/11/01/all-sorts-of-new/</guid>
      <description>A lot has happened since I last had the opportunity to post.&amp;#160;
Quick recap:
 PowerShell v2 is now out and available for XP, Server 2003, Vista, Server 2008, and installed and on by default for Windows 7 and Server 2008 R2 SharePoint 2010 has an insane number (492) There is an open source cmdlet and help designer Try PowerShell is a great way to explore The PowershellPack provides some great modules that get you jump started with V2.</description>
    </item>
    
    <item>
      <title>So Easy, I Could Kick Myself</title>
      <link>https://stevenmurawski.com/2009/11/01/so-easy-i-could-kick-myself/</link>
      <pubDate>Sun, 01 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/11/01/so-easy-i-could-kick-myself/</guid>
      <description>I’m updating Crystal Reports and trying to determine which reports might have been affected by some schema changes or functional changes in how the data was being stored. The problem I’ve had is that when there are a large number of reports, it is very time consuming to open each one, look at it, and see if it contains any affected tables or views.
I’ve had to deal with this in my previous role as well.</description>
    </item>
    
    <item>
      <title>Using the Sync Framework from PowerShell</title>
      <link>https://stevenmurawski.com/2009/11/01/using-the-sync-framework-from-powershell/</link>
      <pubDate>Sun, 01 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/11/01/using-the-sync-framework-from-powershell/</guid>
      <description>I’ve been exploring the Sync Framework for use in a couple of projects I have going and PowerShell is my preferred exploratory environment.
It was a bit of fun, since I got to work with eventing for the first time in V2.
First, I downloaded the Sync Framework Software Development Kit. That provided me with the Sync Framework runtime as well as some documentation.
The easiest way for me to get started was to take one of the samples and convert that to PowerShell.</description>
    </item>
    
    <item>
      <title>Dear Devs,  Give Us The Tools.  K Thx</title>
      <link>https://stevenmurawski.com/2009/07/01/dear-devs-give-us-the-tools-k-thx/</link>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/07/01/dear-devs-give-us-the-tools-k-thx/</guid>
      <description>I just finished listening to the latest Herding Code podcast (#52) where the hosts (K. Scott Allen, Kevin Dente, Scott Koon, and Jon Galloway) talked with Alan Stevens ( C# MVP and ASP Insider) and G. Andrew Duthie (author and Microsoft Developer Evangelist) about a debate that began on Twitter regarding “Real Software Development vs Microsoft Bubble Development”. What does that have to do with PowerShell and administrative tools? The specifics of their conversation don’t have a lot of relevance to administrators and scripters, but one of the directions that their conversation took really resonated with me.</description>
    </item>
    
    <item>
      <title>Deep Dive: Error Handling – Error Types (part 1)</title>
      <link>https://stevenmurawski.com/2009/07/01/deep-dive-error-handling-error-types-part-1/</link>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/07/01/deep-dive-error-handling-error-types-part-1/</guid>
      <description>I started looking a little deeper at error handling in PowerShell after this StackOverflow question. PowerShell has two kinds of errors – terminating errors and non-terminating errors.
Terminating errors are the errors that can stop command execution cold. Non-terminating errors provided an additional challenge, as you need to be notified of failed operations and continue with pipeline operations. To deal with this issue and to provide additional output options, PowerShell employs the concept of streams.</description>
    </item>
    
    <item>
      <title>Exploring the .NET Framework with PowerShell – Garbage Collection (Part 6)</title>
      <link>https://stevenmurawski.com/2009/07/01/exploring-the-net-framework-with-powershell-garbage-collection-part-6/</link>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/07/01/exploring-the-net-framework-with-powershell-garbage-collection-part-6/</guid>
      <description>Garbage collection is a process that the .NET Framework (upon which the PowerShell runtime works) uses to manage memory.&amp;#160; The garbage collection (for applications – services are handled a bit differently) process basically covers X steps:
 Identify objects that won’t be used Delete them from memory Compact the space to make room for new objects  The first step is the critical point for PowerShell users.&amp;#160; You may have noticed how the memory used in a PowerShell session can steadily climb (or suddenly climb if you’re dealing with a large number of objects).</description>
    </item>
    
    <item>
      <title>PowerShell in Azure</title>
      <link>https://stevenmurawski.com/2009/07/01/powershell-in-azure/</link>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/07/01/powershell-in-azure/</guid>
      <description>The July CTP release of the Windows Azure SDK contains a new sample project called PowerShellRole which demonstrates that PowerShell is available in the cloud!
Previous versions of the CTP have come with a sample Provider which you could use to access Azure storage (blobs, queues, and tables), but this actually provides demonstration of creating runspaces and executing pipelines in the cloud.
Now to see what version is running in the cloud!</description>
    </item>
    
    <item>
      <title>More PowerShell on the Thirsty Developer</title>
      <link>https://stevenmurawski.com/2009/06/01/more-powershell-on-the-thirsty-developer/</link>
      <pubDate>Mon, 01 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/06/01/more-powershell-on-the-thirsty-developer/</guid>
      <description>Larry Clarkin asked me back on the Thirsty Developer to continue talking about development and PowerShell.&amp;#160; We talked about creating cmdlets, hosting PowerShell, and a bit about Version 2.&amp;#160; Check it out here.</description>
    </item>
    
    <item>
      <title>Response: Give Me A Coconut and Six Months</title>
      <link>https://stevenmurawski.com/2009/06/01/response-give-me-a-coconut-and-six-months/</link>
      <pubDate>Mon, 01 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/06/01/response-give-me-a-coconut-and-six-months/</guid>
      <description>I was tagged by SQL Server Expert Brent Ozar in his response to a great, thought provoking blog post called Give Me a Coconut and Six Months by Tim Ford (SQLAgentMan on Twitter).
The short summary of the post is if you had six months free of distraction, what would you turn your attention to.&amp;#160; Tim’s choices included backups, security, and monitoring, which I think is a great “solid foundation” to work from.</description>
    </item>
    
    <item>
      <title>Tip: Focus Your Scripts and Functions</title>
      <link>https://stevenmurawski.com/2009/06/01/tip-focus-your-scripts-and-functions/</link>
      <pubDate>Mon, 01 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/06/01/tip-focus-your-scripts-and-functions/</guid>
      <description>The PowerShell paradigm is the task based cmdlet.&amp;#160; With cmdlets that surface a single function that handle a multitude of inputs, a PowerShell session or script can read back like a sentence.&amp;#160;
Get-Process –Name iexplore | Where-Object {$_.WorkingSet –gt 50000000 } | Stop-Process
In the above (often overused, but illustrates the point well) example, Get-Process, Where-Object, and Stop-Process all accurately describe the task that they perform.
We can take this same approach with our scripts and functions.</description>
    </item>
    
    <item>
      <title>Tip: Keeping Your Scripts DRY.</title>
      <link>https://stevenmurawski.com/2009/06/01/tip-keeping-your-scripts-dry/</link>
      <pubDate>Mon, 01 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/06/01/tip-keeping-your-scripts-dry/</guid>
      <description>DRY?&amp;#160; Does this mean I can’t use PowerShell on a water-cooled PC?
DRY is a principle that can be very familiar to the PowerShell aficionado with a development background.&amp;#160; DRY means Don’t Repeat Yourself.&amp;#160; Keeping your scripts DRY means that our scripts don’t contain repeated code.&amp;#160; Copy/Paste is not your friend!
Why should PowerShell scripters care about keeping their PowerShell DRY?&amp;#160; One major reason – script maintainability.
PowerShell has a huge advantage over scripting environments/shells in that the noun/verb structure lends itself to very readable scripts.</description>
    </item>
    
    <item>
      <title>PowerScripting Podcast – New Night (temporary change)</title>
      <link>https://stevenmurawski.com/2009/05/01/powerscripting-podcast-new-night-temporary-change/</link>
      <pubDate>Fri, 01 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/05/01/powerscripting-podcast-new-night-temporary-change/</guid>
      <description>For the next month or two, the PowerScripting Podcast will be live on Tuesday nights at 9 PM Eastern / 8 PM Central.&amp;#160; Be sure to update your calendars and stop in for some great, interactive PowerShell content.</description>
    </item>
    
    <item>
      <title>WI VMUG Presentation with Scott Herold</title>
      <link>https://stevenmurawski.com/2009/05/01/wi-vmug-presentation-with-scott-herold/</link>
      <pubDate>Fri, 01 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/05/01/wi-vmug-presentation-with-scott-herold/</guid>
      <description>This morning, Scott Herold and I did back to back presentations on PowerShell and the Virtualization EcoShell for the Wisconsin VMWare Users Group. Time flew by and I didn’t get to the second half of my slide deck, so if you are interested, here it is.
If you want to see the webcast, you can find it here. Just a word of warning, I haven’t listened to it yet, but we were recording over Skype and a fixed microphone while speaking over another mic in a larger room.</description>
    </item>
    
    <item>
      <title>Exploring the .NET Framework with PowerShell – Namespaces (Part 5)</title>
      <link>https://stevenmurawski.com/2009/04/01/exploring-the-net-framework-with-powershell-namespaces-part-5/</link>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/04/01/exploring-the-net-framework-with-powershell-namespaces-part-5/</guid>
      <description>One concept that is central to the understanding of the layout of classes in the Base Class Libraries is the Namespace. Namespaces are a method of providing context for classes (and other constructs like Enums and Structs), allowing developers to group related classes and not worry about name collisions with development in other areas. In the Base Class Libraries, the root namespace is the System namespace. The System namespace defines a large amount of the base types, like Object (which all classes derive from), String, DateTime, Boolean, and numerous others.</description>
    </item>
    
    <item>
      <title>PowerShell, VMWare, and VESI in Wisconsin</title>
      <link>https://stevenmurawski.com/2009/04/01/powershell-vmware-and-vesi-in-wisconsin/</link>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/04/01/powershell-vmware-and-vesi-in-wisconsin/</guid>
      <description>On May 19th, Scott Herold and I will be presenting for the Wisconsin VMWare Users Group. I&amp;rsquo;ll be covering the basics of PowerShell, as well as an introduction to the VI Toolkit (for Windows)/PowerCLI.
Scott will be talking about the Virtualization EcoShell Initiative (VESI).
If you are in Wisconsin, the meeting details can be found here.
If you are not able to make the meeting, VMWare will be providing a live stream of our presentations via WebEx, as well as providing recordings after the fact.</description>
    </item>
    
    <item>
      <title>PowerShellCommunity.Org goes to TechEd</title>
      <link>https://stevenmurawski.com/2009/04/01/powershellcommunityorg-goes-to-teched/</link>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/04/01/powershellcommunityorg-goes-to-teched/</guid>
      <description>This year at TechEd (North America), Hal Rottenberg and I will be there promoting PowerShell and PowerShellCommunity.Org. We will be bouncing around various sessions, the PowerShell booth, and the remaining conference. If you have a PowerShell story that you want to share, find me (I&amp;rsquo;m a big guy and easy to pick out of a crowd). I&amp;rsquo;ll have some recording gear and be looking to collect some user stories.
See you there!</description>
    </item>
    
    <item>
      <title>Tip: Calculated Properties</title>
      <link>https://stevenmurawski.com/2009/04/01/tip-calculated-properties/</link>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/04/01/tip-calculated-properties/</guid>
      <description>I really enjoy Jeffery Hicks&amp;rsquo;s Prof. PowerShell column. In two of his recent columns (Perfect Properties and Label Me Perfect), Jeffery goes in to &amp;ldquo;calculated properties&amp;rdquo;. A calculated property is a hashtable passed to the Select-Object or Format-* cmdlets as one of the properties to return.
Here is an example from Label Me Perfect:
  PS C:&amp;amp;gt; get-wmiobject Win32logicaldisk -filter &amp;ldquo;drivetype=3&amp;rdquo;  -computer &amp;quot;mycompany-dc01&amp;quot; | Format-table DeviceID,VolumeName, @{label=&amp;ldquo;Size(MB)&amp;rdquo;;Expression={$.Size/1mb -as [int]}}, @{label=&amp;quot;Free(MB)&amp;quot;;Expression={$_.</description>
    </item>
    
    <item>
      <title>Turn Your Stored Procedures Into PowerShell Functions - MetaProgramming With PowerShell</title>
      <link>https://stevenmurawski.com/2009/04/01/turn-your-stored-procedures-into-powershell-functions-metaprogramming-with-powershell/</link>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/04/01/turn-your-stored-procedures-into-powershell-functions-metaprogramming-with-powershell/</guid>
      <description>UPDATE: The script was moved to Google Code. The links in the post have been updated to reflect that. Or you can just go here&amp;hellip; http://code.google.com/p/poshcodegen/ I’ve been working on some data conversion at work, converting records from one system to a new system. I’ve built quite a library of SQL queries with PowerShell wrappers for dealing with data in the first system, but I don’t have the same luxury with the new system.</description>
    </item>
    
    <item>
      <title>Busy Week Ahead!</title>
      <link>https://stevenmurawski.com/2009/03/01/busy-week-ahead/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/busy-week-ahead/</guid>
      <description>Monday, I’ll be delivering an Introduction to PowerShell presentation at Brainstorm (a conference for IT Pro’s supporting K-12 schools).&amp;#160;
On Tuesday, I’ll be delivering a presentation to the local .NET Users Group focused more towards developing with PowerShell.&amp;#160;
I’ll also have this week’s Exploring the .NET Framework post on static methods.</description>
    </item>
    
    <item>
      <title>Coming To A WSUS Server Near You –&gt; PowerShell V1.0</title>
      <link>https://stevenmurawski.com/2009/03/01/coming-to-a-wsus-server-near-you-powershell-v10/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/coming-to-a-wsus-server-near-you-powershell-v10/</guid>
      <description>Richard Siddaway has just posted that PowerShell 1.0 is available as an optional update.
I just checked my WSUS Server and there it is!!! Deployment is now a snap.
More details in his blog post.. or in the MS Knowledge Base.</description>
    </item>
    
    <item>
      <title>Effective PowerShell E-Book (Free)</title>
      <link>https://stevenmurawski.com/2009/03/01/effective-powershell-e-book-free/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/effective-powershell-e-book-free/</guid>
      <description>Keith Hill has just released his Effective PowerShell blog series as a free e-book.
He did note that this will be an ongoing project and he expects to keep updating it.&amp;#160; Get it now and keep watching for updates!</description>
    </item>
    
    <item>
      <title>Exploring the .NET Framework with PowerShell – Constructors (Part 3)</title>
      <link>https://stevenmurawski.com/2009/03/01/exploring-the-net-framework-with-powershell-constructors-part-3/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/exploring-the-net-framework-with-powershell-constructors-part-3/</guid>
      <description>In part 2(a &amp;amp; b) of this series, we talked about methods and looked at ways to view their overloads, or ways to call them.&amp;#160; We also looked at the objects returned from a method call.&amp;#160; In this post, we are going to explore a special kind of method called the constructor.
A constructor is a method whose job is to create the object that you want to work with.&amp;#160; When I created the Ping object</description>
    </item>
    
    <item>
      <title>Exploring the .NET Framework with PowerShell – Static Members (Part 4)</title>
      <link>https://stevenmurawski.com/2009/03/01/exploring-the-net-framework-with-powershell-static-members-part-4/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/exploring-the-net-framework-with-powershell-static-members-part-4/</guid>
      <description>In our Exploring the .NET Framework series, we’ve covered some terminology, creating instances of objects and calling methods. In today’s installment, we are going to look at using static members - methods and properties. Static methods are methods that a class (or type) make available without needing to create an instance of the class. Similarly, static properties are properties that you can access without needing an instance of the class.</description>
    </item>
    
    <item>
      <title>How To Send E-Mail From PowerShell</title>
      <link>https://stevenmurawski.com/2009/03/01/how-to-send-e-mail-from-powershell/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/how-to-send-e-mail-from-powershell/</guid>
      <description>In my Exploring the .NET Framework series, I introduced the System.Net.Mail.MailMessage class. Being able to create a MailMessage object is all well and good, but if you can’t send it, it’s really not helpful.
Updated - This mainly applies to V1 of PowerShell. V2 has a built in cmdlet for this purpose. To send an email from PowerShell using the .NET Framework, you can use the System.Net.Mail.SMTPClient class.
First, you need to create your MailMessage</description>
    </item>
    
    <item>
      <title>Microsoft TechDays Virtual Event</title>
      <link>https://stevenmurawski.com/2009/03/01/microsoft-techdays-virtual-event/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/microsoft-techdays-virtual-event/</guid>
      <description>On April 1st, 2009, Microsoft is putting on a free 24 hour virtual event covering developer-related topics. There will be 95 live sessions provided via Live Meeting in the following tracks:
 Windows Development and Frameworks Windows Mobile Development Office and SharePoint Development Developer Tools, Languages &amp;amp; Practices Web Development &amp;amp; User Experience  PowerShell Community’s own Marco Shaw (MVP) will be presenting the ONLY PowerShell session:
  WIN300 Scripting the Microsoft .</description>
    </item>
    
    <item>
      <title>Talking PowerShell on The Thirsty Developer</title>
      <link>https://stevenmurawski.com/2009/03/01/talking-powershell-on-the-thirsty-developer/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/talking-powershell-on-the-thirsty-developer/</guid>
      <description>I recently had the opportunity to talk a bit about PowerShell with Larry Clarkin of The Thirsty Developer podcast.&amp;#160; I had a great time talking with Larry and the time went very quickly (there is so much more I wanted to say, but we ran out of time).
The Thirsty Developer is a great podcast featuring Larry Clarkin and Dave Bost, two Microsoft Evangelists in my area.&amp;#160; They cover a number of development related topics and have touched on PowerShell in an earlier show (#43).</description>
    </item>
    
    <item>
      <title>Tip: Free Up Some Memory</title>
      <link>https://stevenmurawski.com/2009/03/01/tip-free-up-some-memory/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/tip-free-up-some-memory/</guid>
      <description>I’m often running too many applications on my workstation, and at least one session of&amp;#160; PowerShell is almost always open.&amp;#160; I’m regularly jumping back to a PowerShell prompt to try something out, query something from my database, or complete a task.&amp;#160;
If I don’t clear out the variables that reference objects I’m done with, the amount of memory used by my PowerShell session increases dramatically, which impacts some other applications that I run.</description>
    </item>
    
    <item>
      <title>Tip: Passing Parameters</title>
      <link>https://stevenmurawski.com/2009/03/01/tip-passing-parameters/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/tip-passing-parameters/</guid>
      <description>Jeffery Hicks recently talked about the Param statement in his Prof. Powershell column for MCP Magazine (Keeping Your Options Open). If you are new to PowerShell, I would definitely recommend reading the article, as provides a nice introduction to the Param statement. Jeffrey recommended to cast your parameter as the type of object that you are expecting, as way to catch errors. I wholeheartedly agree. That can cause trouble though, if you want to allow consumers of your script to pass in one or more values for that parameter.</description>
    </item>
    
    <item>
      <title>Tip: Passing Parameters Revisited</title>
      <link>https://stevenmurawski.com/2009/03/01/tip-passing-parameters-revisited/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/tip-passing-parameters-revisited/</guid>
      <description>In this post. Jeff describes how you can make a function act more like a cmdlet. The problem that you run into in V1 of PoweShell is that it is easy to make your functions work with the pipeline
Function Check-Service { Param([string]$service=”spooler” ) PROCESS { $wmi=get-wmiobject win32_service -filter “name=’$service’” -computername $_ if ($wmi.state -eq “running”) { write $True } else { write $False } } } Get-Content servers.txt | Check-Service</description>
    </item>
    
    <item>
      <title>Tip: Sneaky Storage – What’s in your AppDomain?</title>
      <link>https://stevenmurawski.com/2009/03/01/tip-sneaky-storage-whats-in-your-appdomain/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/tip-sneaky-storage-whats-in-your-appdomain/</guid>
      <description>Since PowerShell is built on .NET, there is a AppDomain (I’ll go into more detail in a later post) which has a lot of information about the .NET environment (what assemblies are loaded, etc..).
One feature that the AppDomain has is to store globally accessible name/value pairs.&amp;#160; Normally, variables in PowerShell should handle most of your “in-process” storage needs, but for the times that they don’t, you have your AppDomain.</description>
    </item>
    
    <item>
      <title>“Diff”ing Database Table Columns</title>
      <link>https://stevenmurawski.com/2009/03/01/diffing-database-table-columns/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/diffing-database-table-columns/</guid>
      <description>Previously, I published a script on comparing what tables two databases contained.&amp;#160; Going a bit further, I put together a script that compares the columns and what type of data they store.
Compare-DatabaseColumns has similar parameters to the Compare-DatabaseSchema script.
 Table – One or more tables to compare columns from SqlServerOne – SQL Server for the first database FirstDatabase – Name of the first database for the comparison SqlUsernameOne – SQL user name for the first database SqlPasswordOne – SQL password for the first database SqlServerTwo – SQL Server for the second database SecondDatabase – Name of the second database for comparison SqlUsernameTwo – SQL user name for the second database SqlPasswordTwo – SQL password for the second database FilePrefix – Prefix for the log file name Log – Switch parameter that saves one CSV file with the difference in the tables.</description>
    </item>
    
    <item>
      <title>Adding Custom Properties to Functions</title>
      <link>https://stevenmurawski.com/2009/02/01/adding-custom-properties-to-functions/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/adding-custom-properties-to-functions/</guid>
      <description>A question was asked on StackOverflow regarding how to add properties to a function, and then be able to retain that custom property when recalling that function from the function Provider.&amp;#160;&amp;#160; I’m not going to copy my answer here, but I do want to throw out a possible work around for this issue.&amp;#160;
(It has been bugging me and I can’t really concentrate on my other tasks, so I need to get this out of the way.</description>
    </item>
    
    <item>
      <title>Cahoots! Rocks</title>
      <link>https://stevenmurawski.com/2009/02/01/cahoots-rocks/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/cahoots-rocks/</guid>
      <description>Cahoots! is an open source project that provides a Question and Answer forum that is driven by community participation.&amp;#160; It also includes blogging, podcasting, and a knowledgebase functionality.&amp;#160;
Logins are managed via OpenID, so you don’t have to worry about managing additional login credentials.
Your capabilities to create content are driven by “esteem”, which is a metric for tracking the response to content you provide.&amp;#160; You can gain “esteem” by asking asking questions, posting blog entries, and having people follow your activities on the site.</description>
    </item>
    
    <item>
      <title>Comparing Database Schemas</title>
      <link>https://stevenmurawski.com/2009/02/01/comparing-database-schemas/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/comparing-database-schemas/</guid>
      <description>I regularly am working with several versions of a database for an application that I manage (a live database, training database, test database, and previous version database).&amp;#160; Occasionally, I need to know what the differences between the databases are, especially after our vendor updates my test environment or right after an update in my training or live environment.&amp;#160;
Since I spend a good portion of my day in PowerShell, I wrapped some system table queries in a PowerShell script and use Compare-Object to find any differences in the tables and compare the column definitions as well.</description>
    </item>
    
    <item>
      <title>ConvertTo-Function</title>
      <link>https://stevenmurawski.com/2009/02/01/convertto-function/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/convertto-function/</guid>
      <description>EDIT : I have a bunch of scripts that I use regularly, but it can be a pain to type the path. These are scripts I don&amp;rsquo;t always need, so I don&amp;rsquo;t want to include them in my profile.
I thought it might be convenient to have a way to convert those scripts into functions on demand. I searched around but couldn’t find an existing script to do that, so here one is.</description>
    </item>
    
    <item>
      <title>Exploring the .NET Framework With PowerShell – Terminology (Part 1)</title>
      <link>https://stevenmurawski.com/2009/02/01/exploring-the-net-framework-with-powershell-terminology-part-1/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/exploring-the-net-framework-with-powershell-terminology-part-1/</guid>
      <description>PowerShell opens up the .NET Framework for a large new group of consumers, IT Pro’s (or systems administrators). Microsoft developers have been working for years with the .NET Framework and now that rich sea of resources is available from our command line. One of the first hurdles that many IT Pro’s come across when trying to see where the .NET Framework fits into their workflow is the terminology. Before we start digging into the guts of the .</description>
    </item>
    
    <item>
      <title>Exploring the .NET Framework with PowerShell – Calling a Method (Part 2a)</title>
      <link>https://stevenmurawski.com/2009/02/01/exploring-the-net-framework-with-powershell-calling-a-method-part-2a/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/exploring-the-net-framework-with-powershell-calling-a-method-part-2a/</guid>
      <description>Last week, I defined a number of terms that we’ll be exposed to as we delve into how and why PowerShell is an object oriented shell and how to use it to explore .NET Framework which it is built upon. Now, let’s take a look at how some of these terms surface themselves in PowerShell.
One of the most common tasks you might encounter is needing to ping a computer. There is ping.</description>
    </item>
    
    <item>
      <title>Exploring the .NET Framework with PowerShell – Calling a Method (Part 2b)</title>
      <link>https://stevenmurawski.com/2009/02/01/exploring-the-net-framework-with-powershell-calling-a-method-part-2b/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/exploring-the-net-framework-with-powershell-calling-a-method-part-2b/</guid>
      <description>Continuing from where I left off last week, we were created an instance of the System.Net.NetworkInformation.Ping class and looked at the different ways (overloads) that we can call the Send method.&amp;#160; Now that we’ve seen how we can create Ping objects, let’s take advantage of options for creating some custom ping packets and examine the return object.
PS C:&amp;amp;gt; $encoder = new-object System.Text.ASCIIEncoding
PS C:&amp;amp;gt; $bytes = $encoder.Getbytes(&amp;lsquo;Hello From Steve&amp;rsquo;)</description>
    </item>
    
    <item>
      <title>Finding the K Most Common Words in a File</title>
      <link>https://stevenmurawski.com/2009/02/01/finding-the-k-most-common-words-in-a-file/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/finding-the-k-most-common-words-in-a-file/</guid>
      <description>Doug Finke recently posted a blog post about finding the most common words in a file.
Doug put together a little 19 line PowerShell script to solve the issue, but something just called to me about how it wasn’t necessarily playing to some of the included cmdlets in PowerShell.
So, here’s my interpretation as a one liner:
get-content big.txt | foreach-object {[regex]::split($.ToLower(), &amp;lsquo;\W+&amp;lsquo;)} | where-object {$.length -gt 0} | group-object | sort-object -property count -descending | select-object -property name -first 6</description>
    </item>
    
    <item>
      <title>PowerShell Virtual User Group #9 Details</title>
      <link>https://stevenmurawski.com/2009/02/01/powershell-virtual-user-group-09-details/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/powershell-virtual-user-group-09-details/</guid>
      <description>Marco Shaw just posted the details about the next Virtual User Group meeting.
Topics include:
  Speaker topics: *Doug Finke: Data visualization in PowerShell (http://www.dougfinke.com/blog). *Chris Miller: SQL Server PowerShell Extensions (http://www.codeplex.com/SQLPSX). *James Brundage: Using WPF from PowerShell (http://blogs.msdn.com/powershell).
The Virtual User Group meeting is this Wednesday at 8:00 PM EST.&amp;#160; You can register here.&amp;#160; See you there!</description>
    </item>
    
    <item>
      <title>Calling all Ohio PowerShell Enthusiasts!</title>
      <link>https://stevenmurawski.com/2009/01/01/calling-all-ohio-powershell-enthusiasts/</link>
      <pubDate>Thu, 01 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/01/01/calling-all-ohio-powershell-enthusiasts/</guid>
      <description>The Central Ohio Day of .NET is coming up (April 18th, 2009) and they’ve put out a request for speakers.&amp;#160; From their website:
  The Central Ohio Day of .NET is a joint venture between the Dayton .NET Developers Group, Central Ohio .NET Developers Group, Cincinnati SQL Server Users Group and the Cincinnati .NET Users Group.
Why don’t we get some PowerShell related sessions added to the lineup.&amp;#160; They said specifically that they are looking for introductory material on new technologies.</description>
    </item>
    
    <item>
      <title>Dealing with WMI Timeouts</title>
      <link>https://stevenmurawski.com/2009/01/01/dealing-with-wmi-timeouts/</link>
      <pubDate>Thu, 01 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/01/01/dealing-with-wmi-timeouts/</guid>
      <description>There was a question in the PowerShellCommunity.Org forums about WMI timeouts.
I did some digging and found there are several different types of timeouts that can affect your WMI queries.&amp;#160; I’m still working through different scenarios and I’d appreciate any feedback.
The first type of timeout can occur if the machine that you are targeting does not respond to network traffic (it’s down, you have the wrong IP address, firewalled, etc.</description>
    </item>
    
    <item>
      <title>PowerShell Virtual User Group #8 Coming Up</title>
      <link>https://stevenmurawski.com/2009/01/01/powershell-virtual-user-group-08-coming-up/</link>
      <pubDate>Thu, 01 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/01/01/powershell-virtual-user-group-08-coming-up/</guid>
      <description>Marco Shaw has posted the details for the next PowerShell Virtual User Group.&amp;#160; Details can also be found on Marco’s blog, as well as other great content.
Keep 12 PM EST free on January 29th!&amp;#160; See you there!</description>
    </item>
    
  </channel>
</rss>