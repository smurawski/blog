<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql on A Sysadmin, An SRE, and a DevOps Walk Into a Bar</title>
    <link>https://stevenmurawski.com/categories/sql/</link>
    <description>Recent content in Sql on A Sysadmin, An SRE, and a DevOps Walk Into a Bar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jun 2009 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://stevenmurawski.com/categories/sql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Response: Give Me A Coconut and Six Months</title>
      <link>https://stevenmurawski.com/2009/06/01/response-give-me-a-coconut-and-six-months/</link>
      <pubDate>Mon, 01 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/06/01/response-give-me-a-coconut-and-six-months/</guid>
      <description>I was tagged by SQL Server Expert Brent Ozar in his response to a great, thought provoking blog post called Give Me a Coconut and Six Months by Tim Ford (SQLAgentMan on Twitter).
The short summary of the post is if you had six months free of distraction, what would you turn your attention to.&amp;#160; Tim’s choices included backups, security, and monitoring, which I think is a great “solid foundation” to work from.</description>
    </item>
    
    <item>
      <title>Turn Your Stored Procedures Into PowerShell Functions - MetaProgramming With PowerShell</title>
      <link>https://stevenmurawski.com/2009/04/01/turn-your-stored-procedures-into-powershell-functions-metaprogramming-with-powershell/</link>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/04/01/turn-your-stored-procedures-into-powershell-functions-metaprogramming-with-powershell/</guid>
      <description>UPDATE: The script was moved to Google Code. The links in the post have been updated to reflect that. Or you can just go here&amp;hellip; http://code.google.com/p/poshcodegen/ I’ve been working on some data conversion at work, converting records from one system to a new system. I’ve built quite a library of SQL queries with PowerShell wrappers for dealing with data in the first system, but I don’t have the same luxury with the new system.</description>
    </item>
    
    <item>
      <title>“Diff”ing Database Table Columns</title>
      <link>https://stevenmurawski.com/2009/03/01/diffing-database-table-columns/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/03/01/diffing-database-table-columns/</guid>
      <description>Previously, I published a script on comparing what tables two databases contained.&amp;#160; Going a bit further, I put together a script that compares the columns and what type of data they store.
Compare-DatabaseColumns has similar parameters to the Compare-DatabaseSchema script.
 Table – One or more tables to compare columns from SqlServerOne – SQL Server for the first database FirstDatabase – Name of the first database for the comparison SqlUsernameOne – SQL user name for the first database SqlPasswordOne – SQL password for the first database SqlServerTwo – SQL Server for the second database SecondDatabase – Name of the second database for comparison SqlUsernameTwo – SQL user name for the second database SqlPasswordTwo – SQL password for the second database FilePrefix – Prefix for the log file name Log – Switch parameter that saves one CSV file with the difference in the tables.</description>
    </item>
    
    <item>
      <title>Comparing Database Schemas</title>
      <link>https://stevenmurawski.com/2009/02/01/comparing-database-schemas/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://stevenmurawski.com/2009/02/01/comparing-database-schemas/</guid>
      <description>I regularly am working with several versions of a database for an application that I manage (a live database, training database, test database, and previous version database).&amp;#160; Occasionally, I need to know what the differences between the databases are, especially after our vendor updates my test environment or right after an update in my training or live environment.&amp;#160;
Since I spend a good portion of my day in PowerShell, I wrapped some system table queries in a PowerShell script and use Compare-Object to find any differences in the tables and compare the column definitions as well.</description>
    </item>
    
  </channel>
</rss>